Timer unit: 1e-07 s

Total time: 6.67936 s
File: C:\Users\Toby Usher\Documents\dev\quivo-app\backend\api\views.py
Function: post at line 320

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   320                                           	@profile
   321                                           	def post(self, request, *args, **kwargs):
   322                                           
   323        80      19252.0    240.7      0.0  		language_code = self.request.session.get('current_language_code')
   324                                           		
   325        80       2744.0     34.3      0.0  		user_id = self.kwargs.get('user_id')
   326        80       1319.0     16.5      0.0  		word = self.kwargs.get('word')
   327                                           
   328                                           		#serializer = UserToggleKnownWordSerializer(data=request.data)
   329        80     100926.0   1261.6      0.2  		serializer = UserToggleKnownWordSerializer(data={'user_id': user_id, 'word': word})
   330                                           
   331        80     673909.0   8423.9      1.0  		if serializer.is_valid():
   332                                           
   333        80       5552.0     69.4      0.0  			user_id = serializer.validated_data['user_id']
   334        80       3687.0     46.1      0.0  			word = serializer.validated_data['word']
   335                                           
   336       160       2610.0     16.3      0.0  			word_data_model = {
   337        80       1429.0     17.9      0.0  				'fr': FrWordData,
   338        80       1038.0     13.0      0.0  				'de': DeWordData,
   339        80        789.0      9.9      0.0  				'ru': RuWordData
   340        80       1969.0     24.6      0.0  			}.get(language_code, 'fr') # Default to fr for now
   341                                           
   342        80    3325005.0  41562.6      5.0  			user = AppUser.objects.get(user_id=user_id)
   343        80   11336355.0 141704.4     17.0  			word_obj = word_data_model.objects.get(word=word)
   344                                           
   345                                           			# Get the UserWord object for this user and word
   346       240   21982610.0  91594.2     32.9  			user_word_obj, created = UserWord.objects.get_or_create(
   347        80        779.0      9.7      0.0  				user=user,
   348        80       2103.0     26.3      0.0  				**{f'word_{language_code}': word_obj}
   349                                           			)
   350                                           
   351                                           			# Check if a user knows a word
   352        80       1500.0     18.8      0.0  			if created:
   353        80       1029.0     12.9      0.0  				word_added = True
   354                                           				#user.known_words.add(user_word_obj)
   355                                           			else:
   356                                           				word_added = False
   357                                           				user.known_words.remove(user_word_obj)
   358                                           
   359       159   15862314.0  99763.0     23.7  			with open('output.txt', 'w') as stream:
   360        79   13235691.0 167540.4     19.8  				profile.print_stats(stream=stream)  
   361                                           
   362       158     229066.0   1449.8      0.3  			return Response({
   363        79       1213.0     15.4      0.0  				"status": "success",
   364        79        723.0      9.2      0.0  				"word_added": word_added
   365                                           				})
   366                                           
   367                                           		else:
   368                                           
   369                                           			return Response(serializer.errors, status=400)

