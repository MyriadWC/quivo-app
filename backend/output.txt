Timer unit: 1e-07 s

Total time: 9.40832 s
File: C:\Users\Toby Usher\Documents\dev\quivo-app\backend\api\views.py
Function: gen at line 551

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   551                                           		@profile
   552                                           		def gen(queryset, known_words, percentage_known_words, tolerance):
   553         1         18.0     18.0      0.0  			count = 0
   554         1         10.0     10.0      0.0  			tolerance_counter = 0
   555       302   94010840.0 311294.2     99.9  			for item in queryset:
   556                                           
   557                                           				# Convert word to correct format
   558                                           				#words = item.words[1:-1].split(",")  # Convert string to list
   559                                           				# Make sure double quotes so it's valid json
   560                                           				#words = ', '.join(f'"{word.strip()}"' for word in words) # NOTE: This fails if the word already has quotation marks
   561                                           				#item.words = f'[{words}]'
   562                                           
   563                                           				# Very inefficient but increase tolerance by 10% if not returned 20 values after n iterations
   564       302       6156.0     20.4      0.0  				if tolerance_counter == 5000:
   565                                           					tolerance += 10
   566                                           					tolerance_counter = 0
   567                                           				
   568       302      14267.0     47.2      0.0  				tolerance_counter += 1
   569                                           
   570       302      22691.0     75.1      0.0  				words = set(item.words)
   571                                           				# Avoid costly division by multiplying other terms by denominator
   572       302       6873.0     22.8      0.0  				num_words = len(words)
   573       302      21234.0     70.3      0.0  				if (percentage_known_words - tolerance) * num_words <= len(words.intersection(known_words)) * 100 <= (percentage_known_words + tolerance) * num_words:
   574        20        383.0     19.1      0.0  					yield item
   575        20        417.0     20.9      0.0  					count += 1
   576        20        336.0     16.8      0.0  					if count == 20: return

