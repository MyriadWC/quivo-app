Timer unit: 1e-07 s

Total time: 0.0678673 s
File: C:\Users\Toby Usher\Documents\dev\quivo-app\backend\api\views.py
Function: get at line 376

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   376                                           	@profile
   377                                           	def get(self, request, *args, **kwargs):
   378                                           
   379         2        205.0    102.5      0.0  		language_code = self.request.session.get('current_language_code')
   380         2         14.0      7.0      0.0  		user_id = self.kwargs['user_id']
   381                                           
   382         6      17683.0   2947.2      2.6  		user_words = UserWord.objects.filter(
   383         2          6.0      3.0      0.0      		user_id=user_id,
   384         2        204.0    102.0      0.0      		**{f'word_{language_code}': OuterRef('pk')}
   385                                           			)
   386                                           
   387         4         89.0     22.2      0.0  		words_data_obj = {
   388         2         19.0      9.5      0.0  			'fr': FrWordData,
   389         2         14.0      7.0      0.0  			'de': DeWordData,
   390         2          9.0      4.5      0.0  			'ru': RuWordData
   391         2         23.0     11.5      0.0  		}.get(language_code, 'fr')
   392                                                   
   393                                           		# queryset contains all words in [Lang]WordData with annotation to say whether
   394                                           		# the current user knows each word
   395         2      26575.0  13287.5      3.9  		queryset = words_data_obj.objects.annotate(user_knows=Exists(user_words)).filter(user_knows=True)
   396                                           
   397                                           		#queryset = queryset
   398                                           
   399         4     409334.0 102333.5     60.3  		counts = queryset.aggregate(**{
   400         2       1129.0    564.5      0.2  			'1-1000': Count('id', filter=Q(id__range=(1, 1000))),
   401         2        733.0    366.5      0.1  			'1001-2000': Count('id', filter=Q(id__range=(1001, 2000))),
   402         2        832.0    416.0      0.1  			'2001-3000': Count('id', filter=Q(id__range=(2001, 3000))),
   403         2        647.0    323.5      0.1  			'3001-4000': Count('id', filter=Q(id__range=(3001, 4000))),
   404         2        691.0    345.5      0.1  			'4001-5000': Count('id', filter=Q(id__range=(4001, 5000))),
   405         2        637.0    318.5      0.1  			'5000+': Count('id', filter=Q(id__gt=5000))
   406                                           		})
   407                                           
   408         3     133839.0  44613.0     19.7  		with open('output.txt', 'w') as stream:
   409         1      74270.0  74270.0     10.9  			profile.print_stats(stream=stream)  
   410                                           		
   411         1      11720.0  11720.0      1.7  		return Response(counts)

