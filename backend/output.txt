Timer unit: 1e-07 s

Total time: 0.0371016 s
File: C:\Users\Toby Usher\Documents\dev\quivo-app\backend\api\views.py
Function: post at line 320

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   320                                           	@profile
   321                                           	def post(self, request, *args, **kwargs):
   322                                           
   323         1        241.0    241.0      0.1  		language_code = self.request.session.get('current_language_code')
   324                                           		
   325         1         16.0     16.0      0.0  		user_id = self.kwargs.get('user_id')
   326         1         10.0     10.0      0.0  		word = self.kwargs.get('word')
   327                                           
   328                                           		#serializer = UserToggleKnownWordSerializer(data=request.data)
   329         1       1028.0   1028.0      0.3  		serializer = UserToggleKnownWordSerializer(data={'user_id': user_id, 'word': word})
   330                                           
   331         1       5388.0   5388.0      1.5  		if serializer.is_valid():
   332                                           
   333         1         32.0     32.0      0.0  			user_id = serializer.validated_data['user_id']
   334         1         17.0     17.0      0.0  			word = serializer.validated_data['word']
   335                                           
   336         2         30.0     15.0      0.0  			word_data_model = {
   337         1          8.0      8.0      0.0  				'fr': FrWordData,
   338         1         15.0     15.0      0.0  				'de': DeWordData,
   339         1          9.0      9.0      0.0  				'ru': RuWordData
   340         1          7.0      7.0      0.0  			}.get(language_code, 'fr') # Default to fr for now
   341                                           
   342         1      39167.0  39167.0     10.6  			user = AppUser.objects.get(user_id=user_id)
   343         1     109555.0 109555.0     29.5  			word_obj = word_data_model.objects.get(word=word)
   344                                           
   345                                           			# Get the UserWord object for this user and word
   346         3     203487.0  67829.0     54.8  			user_word_obj, created = UserWord.objects.get_or_create(
   347         1          5.0      5.0      0.0  				user=user,
   348         1        120.0    120.0      0.0  				**{f'word_{language_code}': word_obj}
   349                                           			)
   350                                           
   351                                           			# Check if a user knows a word
   352         1          9.0      9.0      0.0  			if created:
   353         1         11.0     11.0      0.0  				word_added = True
   354                                           				#user.known_words.add(user_word_obj)
   355                                           			else:
   356                                           				word_added = False
   357                                           				user.known_words.remove(user_word_obj)
   358                                           
   359         1      11861.0  11861.0      3.2  			with open('output.txt', 'w') as stream:
   360                                           				profile.print_stats(stream=stream)  
   361                                           
   362                                           			return Response({
   363                                           				"status": "success",
   364                                           				"word_added": word_added
   365                                           				})
   366                                           
   367                                           		else:
   368                                           
   369                                           			return Response(serializer.errors, status=400)

