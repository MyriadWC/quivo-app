{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Toby Usher\\\\Documents\\\\dev\\\\quivo-app\\\\frontend\\\\screens\\\\AccountScreen\\\\components\\\\WordsLearnedPanel.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useContext } from \"react\";\nimport UserContext from '../../../contexts/UserContext';\nimport * as constants from '../../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WordsLearnedPanel(_ref) {\n  var _this = this;\n  var navigation = _ref.navigation;\n  var _useContext = useContext(UserContext),\n    currentUser = _useContext.currentUser,\n    wordCounts = _useContext.wordCounts;\n  var renderBar = function renderBar(title, total, value) {\n    return _jsxDEV(View, {\n      style: styles.barContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.barCountText,\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, _this), _jsxDEV(View, {\n        style: styles.barBackground,\n        children: _jsxDEV(View, {\n          style: _objectSpread({\n            height: value / total * 150\n          }, styles.barForeground)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, _this), _jsxDEV(Text, {\n        style: styles.barLabelText,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, _this);\n  };\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 1,\n    style: styles.container,\n    onPress: function onPress() {\n      navigation.navigate('WordList');\n    },\n    children: [_jsxDEV(View, {\n      style: styles.titleBar,\n      children: _jsxDEV(Text, {\n        style: styles.titleText,\n        children: \"Words Learned\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), _jsxDEV(View, {\n      style: styles.panelBody,\n      children: wordCounts ? Object.entries(wordCounts).map(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          value = _ref3[1];\n        return renderBar(key.replace(/00[01]/g, 'k'), 1000, value);\n      }) : _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: constants.ORANGE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 20,\n    overflow: 'hidden',\n    height: 'auto',\n    marginBottom: 20,\n    borderWidth: 3,\n    borderColor: constants.GREENREGULAR\n  },\n  titleBar: {\n    flexDirection: 'row',\n    backgroundColor: constants.GREENREGULAR,\n    marginBottomColor: constants.GREENREGULAR\n  },\n  titleText: {\n    fontFamily: constants.FONTFAMILYBOLD,\n    fontSize: constants.H2FONTSIZE,\n    color: constants.TERTIARYCOLOR,\n    padding: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  panelBody: {\n    flexDirection: 'row',\n    height: 220,\n    paddingHorizontal: 6\n  },\n  barContainer: {\n    height: 150,\n    width: '16.666%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 10\n  },\n  barCountText: {\n    fontFamily: constants.FONTFAMILYBOLD,\n    fontSize: constants.CONTENTFONTSIZE,\n    color: constants.BLACK,\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  barLabelText: {\n    fontFamily: constants.FONTFAMILY,\n    fontSize: constants.CONTENTFONTSIZE,\n    color: constants.BLACK,\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  barBackground: {\n    backgroundColor: constants.GREENLIGHT,\n    height: '100%',\n    overflow: 'hidden',\n    borderRadius: 10,\n    margin: 6\n  },\n  barForeground: {\n    backgroundColor: constants.GREENREGULAR,\n    marginTop: 'auto'\n  }\n});","map":{"version":3,"names":["useContext","UserContext","constants","jsxDEV","_jsxDEV","WordsLearnedPanel","_ref","_this","navigation","_useContext","currentUser","wordCounts","renderBar","title","total","value","View","style","styles","barContainer","children","Text","barCountText","fileName","_jsxFileName","lineNumber","columnNumber","barBackground","_objectSpread","height","barForeground","barLabelText","TouchableOpacity","activeOpacity","container","onPress","navigate","titleBar","titleText","panelBody","Object","entries","map","_ref2","_ref3","_slicedToArray","key","replace","ActivityIndicator","size","color","ORANGE","StyleSheet","create","borderRadius","overflow","marginBottom","borderWidth","borderColor","GREENREGULAR","flexDirection","backgroundColor","marginBottomColor","fontFamily","FONTFAMILYBOLD","fontSize","H2FONTSIZE","TERTIARYCOLOR","padding","marginLeft","marginRight","paddingHorizontal","width","marginTop","CONTENTFONTSIZE","BLACK","FONTFAMILY","GREENLIGHT","margin"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/AccountScreen/components/WordsLearnedPanel.tsx"],"sourcesContent":["import { View, Text, Dimensions, StyleSheet, TouchableOpacity, ActivityIndicator } from \"react-native\";\r\nimport { useState, useContext } from \"react\";\r\nimport UserContext from '../../../contexts/UserContext';\r\nimport * as constants from '../../../constants';\r\nimport { LineChart } from \"react-native-chart-kit\";\r\n// Utils\r\nimport { sumWordCounts } from \"../../../utils/functions\";\r\nimport WordListScreen from \"../../WordListScreen\";\r\n\r\ninterface IWordsLearnedPanelProps {\r\n    navigation: any\r\n}\r\n\r\nexport default function WordsLearnedPanel({navigation}: IWordsLearnedPanelProps) {\r\n\r\n    const { currentUser, wordCounts } = useContext(UserContext);\r\n\r\n    const renderBar = (title: string, total: number, value: number) => (\r\n        <View style={styles.barContainer}>\r\n            <Text style={styles.barCountText}>{value}</Text>\r\n            <View style={styles.barBackground} >\r\n                <View style={{\r\n                    height: (value / total) * 150,\r\n                    ...styles.barForeground\r\n                }}></View>\r\n            </View>\r\n            <Text style={styles.barLabelText}>{title}</Text>\r\n        </View>\r\n    );\r\n\r\n    return (\r\n    <TouchableOpacity\r\n        activeOpacity={1}\r\n        style={styles.container}\r\n        onPress={() => {navigation.navigate('WordList')}}\r\n        >\r\n        <View style={styles.titleBar}>\r\n            <Text style={styles.titleText}>Words Learned</Text>\r\n        </View>\r\n        <View style={styles.panelBody}>\r\n            {wordCounts ?\r\n                Object.entries(wordCounts).map(([key, value]) => renderBar(key.replace(/00[01]/g, 'k'), 1000, value))\r\n            : <ActivityIndicator size=\"large\" color={constants.ORANGE} />\r\n            }\r\n        </View>\r\n    </TouchableOpacity>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderRadius: 20,\r\n        overflow: 'hidden',\r\n        height: 'auto',\r\n        marginBottom: 20,\r\n        borderWidth: 3,\r\n        borderColor: constants.GREENREGULAR,\r\n    },\r\n    titleBar: {\r\n        flexDirection: 'row',\r\n        backgroundColor: constants.GREENREGULAR,\r\n        marginBottomColor: constants.GREENREGULAR\r\n    },\r\n    titleText: {\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        fontSize: constants.H2FONTSIZE,\r\n        color: constants.TERTIARYCOLOR,\r\n        padding: 10,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    panelBody: {\r\n        flexDirection: 'row',\r\n        height: 220,\r\n        paddingHorizontal: 6\r\n    },\r\n    barContainer: {\r\n        height: 150,\r\n        width: '16.666%',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginTop: 10\r\n    },\r\n    barCountText: {\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        fontSize: constants.CONTENTFONTSIZE,\r\n        color: constants.BLACK,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    },\r\n    barLabelText: {\r\n        fontFamily: constants.FONTFAMILY,\r\n        fontSize: constants.CONTENTFONTSIZE,\r\n        color: constants.BLACK,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    },\r\n    barBackground: {\r\n        backgroundColor: constants.GREENLIGHT,\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        borderRadius: 10,\r\n        margin: 6\r\n    },\r\n    barForeground: {\r\n        backgroundColor: constants.GREENREGULAR,\r\n        marginTop: 'auto'\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}