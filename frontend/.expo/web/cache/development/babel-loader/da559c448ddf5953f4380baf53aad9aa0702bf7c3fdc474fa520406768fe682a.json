{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Toby Usher\\\\Documents\\\\dev\\\\quivo-app\\\\frontend\\\\components\\\\SentenceReaderPanel\\\\index.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faLanguage, faCommentDots } from '@fortawesome/free-solid-svg-icons';\nimport '@fortawesome/free-regular-svg-icons';\nimport * as constants from \"../../constants\";\nimport { speak } from '../../utils/text';\nimport UserContext from '../../contexts/UserContext';\nimport ToggleButton from \"../../components/ToggleButton\";\nimport { useSwipe } from \"./hooks/useSwipe\";\nimport useFetchItems from './hooks/useFetchItems';\nimport useFetchWordsData from \"./hooks/useFetchWordsData\";\nimport useSentenceComponents from \"./hooks/useSentenceComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SentenceReaderPanel(_ref) {\n  var navigation = _ref.navigation,\n    _ref$primaryColor = _ref.primaryColor,\n    primaryColor = _ref$primaryColor === void 0 ? constants.PRIMARYCOLOR : _ref$primaryColor,\n    _ref$sentencesData = _ref.sentencesData,\n    sentencesData = _ref$sentencesData === void 0 ? null : _ref$sentencesData,\n    onSentenceReaderLeftSwipe = _ref.onSentenceReaderLeftSwipe,\n    onSentenceReaderRightSwipe = _ref.onSentenceReaderRightSwipe;\n  var _useContext = useContext(UserContext),\n    currentLanguageCode = _useContext.currentLanguageCode;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    translationVisible = _useState2[0],\n    setTranslationVisible = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    autoDictEnabled = _useState4[0],\n    setAutoDictEnabled = _useState4[1];\n  var _useSwipe = useSwipe(onSwipeLeft, onSwipeRight, 6),\n    onTouchStart = _useSwipe.onTouchStart,\n    onTouchEnd = _useSwipe.onTouchEnd;\n  var _useFetchItems = useFetchItems(sentencesData),\n    currentItem = _useFetchItems.currentItem,\n    changeItem = _useFetchItems.changeItem;\n  var _useFetchWordsData = useFetchWordsData(currentItem),\n    wordsData = _useFetchWordsData.wordsData;\n  var _useSentenceComponent = useSentenceComponents(navigation, primaryColor, currentItem, wordsData, autoDictEnabled),\n    sentenceComponents = _useSentenceComponent.sentenceComponents,\n    setActiveWords = _useSentenceComponent.setActiveWords;\n  useEffect(function () {\n    setActiveWords([]);\n  }, [currentItem]);\n  function onSwipeLeft() {\n    onSentenceReaderLeftSwipe();\n    changeItem(1);\n  }\n  function onSwipeRight() {\n    onSentenceReaderRightSwipe(1);\n    changeItem(-1);\n  }\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(View, {\n      onTouchStart: onTouchStart,\n      onTouchEnd: onTouchEnd,\n      style: styles.contentContainer,\n      children: currentItem && _jsxDEV(View, {\n        style: styles.sentenceContainer,\n        children: [_jsxDEV(View, {\n          style: _objectSpread({\n            display: translationVisible ? \"visible\" : \"none\"\n          }, styles.translatedSentence),\n          children: _jsxDEV(Text, {\n            style: _objectSpread({\n              color: constants.BLACK\n            }, styles.mainText),\n            children: currentItem.translated_sentence\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: _objectSpread({\n            display: translationVisible ? \"none\" : \"visible\"\n          }, styles.realSentence),\n          children: sentenceComponents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), _jsxDEV(View, {\n      style: styles.bottomContainer,\n      children: [_jsxDEV(TouchableOpacity, {\n        activeOpacity: 1,\n        style: [styles.translateButton, styles.shadow],\n        onPressIn: function onPressIn() {\n          return setTranslationVisible(true);\n        },\n        onPressOut: function onPressOut() {\n          return setTranslationVisible(false);\n        },\n        children: _jsxDEV(FontAwesomeIcon, {\n          icon: faLanguage,\n          size: 30,\n          color: primaryColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        activeOpacity: 1,\n        style: [styles.speakButton, styles.shadow],\n        onPress: function onPress() {\n          speak(currentItem.sentence, currentLanguageCode);\n        },\n        children: _jsxDEV(FontAwesomeIcon, {\n          icon: faCommentDots,\n          size: 30,\n          color: primaryColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.autoplayContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.autoplayText,\n          children: \"Autoplay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: styles.toggleButtonContainer,\n          children: _jsxDEV(ToggleButton, {\n            initiallySelected: autoDictEnabled,\n            size: 20,\n            primaryColor: primaryColor,\n            secondaryColor: primaryColor + '55',\n            onValueChange: function onValueChange() {\n              return setAutoDictEnabled(!autoDictEnabled);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\nvar styles = StyleSheet.create({\n  contentContainer: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: constants.TERTIARYCOLOR,\n    padding: 15,\n    flex: 1\n  },\n  autoplayContainer: {\n    flexDirection: 'row',\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    height: 50,\n    marginBottom: 25,\n    marginLeft: 'auto',\n    marginRight: 10,\n    borderRadius: 10\n  },\n  autoplayText: {\n    fontFamily: constants.FONTFAMILY,\n    fontSize: constants.H3FONTSIZE,\n    color: constants.BLACK,\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    marginRight: 5\n  },\n  toggleButtonContainer: {\n    marginTop: 'auto',\n    marginBottom: 'auto'\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    height: 50\n  },\n  sentenceContainer: {\n    width: \"100%\"\n  },\n  mainText: {\n    fontSize: constants.H1FONTSIZE + 7,\n    fontFamily: constants.FONTFAMILYBOLD,\n    textAlign: \"center\"\n  },\n  realSentence: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\"\n  },\n  translatedSentence: {\n    width: \"100%\"\n  },\n  translateButton: {\n    backgroundColor: constants.TERTIARYCOLOR,\n    height: 50,\n    width: 50,\n    borderRadius: 25,\n    flexDirection: 'column',\n    marginTop: 0,\n    marginLeft: 20,\n    marginRight: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  speakButton: {\n    backgroundColor: constants.TERTIARYCOLOR,\n    height: 50,\n    width: 50,\n    borderRadius: 25,\n    flexDirection: 'column',\n    marginTop: 0,\n    marginRight: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  shadow: {\n    shadowColor: constants.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.15,\n    shadowRadius: 1,\n    elevation: 3,\n    borderWidth: 0\n  }\n});","map":{"version":3,"names":["useState","useEffect","useContext","StyleSheet","View","Text","TouchableOpacity","FontAwesomeIcon","faLanguage","faCommentDots","constants","speak","UserContext","ToggleButton","useSwipe","useFetchItems","useFetchWordsData","useSentenceComponents","jsxDEV","_jsxDEV","Fragment","_Fragment","SentenceReaderPanel","_ref","navigation","_ref$primaryColor","primaryColor","PRIMARYCOLOR","_ref$sentencesData","sentencesData","onSentenceReaderLeftSwipe","onSentenceReaderRightSwipe","_useContext","currentLanguageCode","_useState","_useState2","_slicedToArray","translationVisible","setTranslationVisible","_useState3","_useState4","autoDictEnabled","setAutoDictEnabled","_useSwipe","onSwipeLeft","onSwipeRight","onTouchStart","onTouchEnd","_useFetchItems","currentItem","changeItem","_useFetchWordsData","wordsData","_useSentenceComponent","sentenceComponents","setActiveWords","children","style","styles","contentContainer","sentenceContainer","_objectSpread","display","translatedSentence","color","BLACK","mainText","translated_sentence","fileName","_jsxFileName","lineNumber","columnNumber","realSentence","bottomContainer","activeOpacity","translateButton","shadow","onPressIn","onPressOut","icon","size","speakButton","onPress","sentence","autoplayContainer","autoplayText","toggleButtonContainer","initiallySelected","secondaryColor","onValueChange","create","flexDirection","justifyContent","backgroundColor","TERTIARYCOLOR","padding","flex","paddingVertical","paddingHorizontal","height","marginBottom","marginLeft","marginRight","borderRadius","fontFamily","FONTFAMILY","fontSize","H3FONTSIZE","marginTop","width","H1FONTSIZE","FONTFAMILYBOLD","textAlign","flexWrap","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderWidth"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/components/SentenceReaderPanel/index.tsx"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { StyleSheet, View, SafeAreaView, Text, TouchableOpacity } from \"react-native\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\r\nimport { faLanguage, faPlus, faCommentDots } from '@fortawesome/free-solid-svg-icons';\r\nimport { } from '@fortawesome/free-regular-svg-icons';\r\n// Constants\r\nimport * as constants from \"../../constants\";\r\n// Utils\r\nimport { speak } from '../../utils/text';\r\n// Contexts\r\nimport UserContext from '../../contexts/UserContext';\r\n// Components\r\nimport ToggleButton from \"../../components/ToggleButton\";\r\n// Interfaces\r\nimport { ISentence } from \"../../interfaces\";\r\n// Hooks\r\nimport { useSwipe } from \"./hooks/useSwipe\";\r\nimport useFetchItems from './hooks/useFetchItems';\r\nimport useFetchWordsData from \"./hooks/useFetchWordsData\";\r\nimport useSentenceComponents from \"./hooks/useSentenceComponents\";\r\n\r\ninterface ISentenceReaderProps {\r\n    navigation: any,\r\n    primaryColor?: string,\r\n    sentencesData?: ISentence[] | null,\r\n    onSentenceReaderLeftSwipe: Function,\r\n    onSentenceReaderRightSwipe: Function\r\n}\r\n\r\nexport default function SentenceReaderPanel({navigation, primaryColor = constants.PRIMARYCOLOR, sentencesData = null, onSentenceReaderLeftSwipe, onSentenceReaderRightSwipe}: ISentenceReaderProps) {\r\n\r\n    const { currentLanguageCode } = useContext(UserContext);\r\n    \r\n    const [translationVisible, setTranslationVisible] = useState(false);\r\n    const [autoDictEnabled, setAutoDictEnabled] = useState<boolean>(true);\r\n\r\n    const { onTouchStart, onTouchEnd } = useSwipe(onSwipeLeft, onSwipeRight, 6);\r\n    \r\n    // If no sentenceData provided (defaults to null), fetch sentences from database.\r\n    const { currentItem, changeItem } = useFetchItems(sentencesData);\r\n    const { wordsData } = useFetchWordsData(currentItem);\r\n    \r\n    // TODO: This hook returns jsx which needs fixing\r\n    const { sentenceComponents, setActiveWords } =  useSentenceComponents(navigation, primaryColor, currentItem, wordsData, autoDictEnabled);\r\n\r\n    // TODO: Had to do extra useEffect to avoid circular dependency, but this whole screen needs cleaning\r\n    // up\r\n    useEffect(() => {\r\n        setActiveWords([]);\r\n    }, [currentItem]);\r\n\r\n    // Handle swiping between sentences\r\n    function onSwipeLeft() {\r\n        onSentenceReaderLeftSwipe();\r\n        changeItem(1);\r\n    }\r\n    function onSwipeRight() {\r\n        onSentenceReaderRightSwipe(1);\r\n        changeItem(-1);\r\n    }\r\n\r\n    return (<>\r\n    <View\r\n        onTouchStart={onTouchStart}\r\n        onTouchEnd={onTouchEnd}\r\n        style={styles.contentContainer}\r\n        >\r\n        {currentItem &&\r\n        <View style={styles.sentenceContainer}>\r\n            <View style={{\r\n                display: translationVisible ? \"visible\": \"none\",\r\n                ...styles.translatedSentence\r\n                }}>\r\n                <Text style={{color: constants.BLACK, ...styles.mainText}}>{currentItem.translated_sentence}</Text>\r\n            </View>\r\n            <View style={{\r\n                display: translationVisible ? \"none\": \"visible\",\r\n                ...styles.realSentence\r\n                }}>\r\n                {sentenceComponents}\r\n            </View>\r\n        </View>\r\n        }\r\n    </View>\r\n    <View style={styles.bottomContainer}>\r\n        <TouchableOpacity\r\n            activeOpacity={1}\r\n            style={[styles.translateButton, styles.shadow]}\r\n            onPressIn={() => setTranslationVisible(true)}\r\n            onPressOut={() => setTranslationVisible(false)}\r\n            >\r\n            <FontAwesomeIcon icon={faLanguage} size={30} color={primaryColor} />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n            activeOpacity={1}\r\n            style={[styles.speakButton, styles.shadow]}\r\n            onPress={() => {\r\n                speak(currentItem.sentence, currentLanguageCode)\r\n            }}\r\n            >\r\n            <FontAwesomeIcon icon={faCommentDots} size={30} color={primaryColor} />\r\n        </TouchableOpacity>\r\n        <View style={styles.autoplayContainer}>\r\n            <Text style={styles.autoplayText}>Autoplay</Text>\r\n            <View style={styles.toggleButtonContainer}>\r\n                <ToggleButton\r\n                    initiallySelected={autoDictEnabled}\r\n                    size={20}\r\n                    primaryColor={primaryColor}\r\n                    secondaryColor={primaryColor + '55'}\r\n                    onValueChange={() => setAutoDictEnabled(!autoDictEnabled)}\r\n                />\r\n            </View>\r\n        </View>\r\n    </View>\r\n    </>)\r\n}\r\n\r\nconst styles= StyleSheet.create({\r\n    contentContainer: {\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: constants.TERTIARYCOLOR,\r\n        padding: 15,\r\n        flex: 1\r\n    },\r\n    autoplayContainer: {\r\n        flexDirection: 'row',\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 10,\r\n        height: 50,\r\n        //marginTop: -80,\r\n        marginBottom: 25,\r\n        marginLeft: 'auto',\r\n        marginRight: 10,\r\n        borderRadius: 10,\r\n        //elevation: 4\r\n    },\r\n    autoplayText: {\r\n        fontFamily: constants.FONTFAMILY,\r\n        fontSize: constants.H3FONTSIZE,\r\n        color: constants.BLACK,\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto',\r\n        marginRight: 5\r\n    },\r\n    toggleButtonContainer: {\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto'\r\n    },\r\n    bottomContainer: {\r\n        flexDirection: \"row\",\r\n        height: 50,\r\n    },\r\n    sentenceContainer: {\r\n        width: \"100%\"\r\n    },\r\n    mainText: {\r\n        fontSize: constants.H1FONTSIZE + 7,\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        textAlign: \"center\",\r\n\r\n    },\r\n    realSentence: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\"\r\n\r\n    },\r\n    translatedSentence: {\r\n        width: \"100%\"\r\n    },\r\n    translateButton: {\r\n        backgroundColor: constants.TERTIARYCOLOR,\r\n        height: 50,\r\n        width: 50,\r\n        borderRadius: 25,\r\n        flexDirection: 'column',\r\n        marginTop: 0,\r\n        marginLeft: 20,\r\n        marginRight: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    speakButton: {\r\n        backgroundColor: constants.TERTIARYCOLOR,\r\n        height: 50,\r\n        width: 50,\r\n        borderRadius: 25,\r\n        flexDirection: 'column',\r\n        marginTop: 0,\r\n        marginRight: 20,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    shadow: {\r\n        shadowColor: constants.BLACK,\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 0\r\n        },\r\n        shadowOpacity: 0.15,\r\n        shadowRadius: 1,\r\n        elevation: 3,\r\n        borderWidth: 0\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}