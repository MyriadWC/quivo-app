{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport UserContext from \"../contexts/UserContext\";\nimport * as constants from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    secondPassword = _useState8[0],\n    setSecondPassword = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    errorMessage = _useState10[0],\n    setErrorMessage = _useState10[1];\n  var _useContext = useContext(UserContext),\n    submitRegistration = _useContext.submitRegistration;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(Image, {\n      source: require(\"../assets/icon_tight.png\"),\n      style: styles.logo\n    }), _jsx(View, {\n      style: styles.errorBox,\n      children: _jsx(Text, {\n        style: styles.errorText,\n        children: errorMessage\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Username\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(username) {\n          return setUsername(username);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Email\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Re-type password\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setSecondPassword(password);\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"LoginScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.forgot_button,\n        children: \"Already have an account? Login\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.registerBtn,\n      onPress: _asyncToGenerator(function* () {\n        if (password != secondPassword) {\n          setErrorMessage('Passwords don\\'t match');\n          return;\n        }\n        ;\n        var success = yield submitRegistration(username, email, password);\n        if (!success) {\n          setErrorMessage('Registration failed. Try against later');\n        }\n      }),\n      children: _jsx(Text, {\n        style: styles.registerText,\n        children: \"REGISTER\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  image: {\n    marginBottom: 40\n  },\n  logo: {\n    width: 200,\n    height: 53,\n    marginBottom: 10\n  },\n  errorBox: {\n    backgroundColor: constants.TERTIARYCOLOR,\n    width: \"70%\",\n    height: 30,\n    marginBottom: 0,\n    alignItems: \"center\"\n  },\n  errorText: {\n    color: constants.ERRORCOLOR\n  },\n  inputView: {\n    backgroundColor: constants.SECONDARYCOLOR,\n    borderRadius: 10,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  forgot_button: {\n    height: 30,\n    marginBottom: 30\n  },\n  registerBtn: {\n    width: \"70%\",\n    borderRadius: 10,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: constants.PRIMARYCOLOR\n  },\n  registerText: {\n    color: constants.SECONDARYCOLOR\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useContext","StyleSheet","Text","View","Image","TextInput","TouchableOpacity","UserContext","constants","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","secondPassword","setSecondPassword","_useState9","_useState10","errorMessage","setErrorMessage","_useContext","submitRegistration","style","styles","container","children","source","require","logo","errorBox","errorText","inputView","placeholder","placeholderTextColor","onChangeText","secureTextEntry","onPress","navigate","forgot_button","registerBtn","_asyncToGenerator","success","registerText","create","flex","backgroundColor","alignItems","justifyContent","image","marginBottom","width","height","TERTIARYCOLOR","color","ERRORCOLOR","SECONDARYCOLOR","borderRadius","padding","marginLeft","PRIMARYCOLOR"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/RegisterScreen.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { NativeStackHeaderProps } from \"@react-navigation/native-stack\"\r\nimport UserContext from '../contexts/UserContext';\r\nimport * as constants from '../constants'\r\n\r\nexport default function RegisterScreen({navigation}: NativeStackHeaderProps) {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [secondPassword, setSecondPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const { submitRegistration } = useContext(UserContext);\r\n\r\n  return (\r\n  <View style={styles.container}>\r\n    <StatusBar style=\"auto\" />\r\n    <Image\r\n      source={require(\"../assets/icon_tight.png\")}\r\n      style={styles.logo}\r\n    />\r\n    <View style={styles.errorBox}>\r\n      <Text style={styles.errorText}>{errorMessage}</Text>\r\n    </View>\r\n    <View style={styles.inputView}>\r\n      <TextInput\r\n        style={styles.TextInput}\r\n        placeholder=\"Username\"\r\n        placeholderTextColor=\"#003f5c\"\r\n        onChangeText={(username) => setUsername(username)}\r\n      /> \r\n    </View>\r\n    <View style={styles.inputView}>\r\n      <TextInput\r\n        style={styles.TextInput}\r\n        placeholder=\"Email\"\r\n        placeholderTextColor=\"#003f5c\"\r\n        onChangeText={(email) => setEmail(email)}\r\n      /> \r\n    </View> \r\n    <View style={styles.inputView}>\r\n      <TextInput\r\n        style={styles.TextInput}\r\n        placeholder=\"Password\"\r\n        placeholderTextColor=\"#003f5c\"\r\n        secureTextEntry={true}\r\n        onChangeText={(password) => setPassword(password)}\r\n      />\r\n    </View>\r\n    <View style={styles.inputView}>\r\n      <TextInput\r\n        style={styles.TextInput}\r\n        placeholder=\"Re-type password\"\r\n        placeholderTextColor=\"#003f5c\"\r\n        secureTextEntry={true}\r\n        onChangeText={(password) => setSecondPassword(password)}\r\n      />\r\n    </View>\r\n    <TouchableOpacity\r\n      onPress={() => navigation.navigate(\"LoginScreen\")}\r\n    >\r\n      <Text style={styles.forgot_button}>Already have an account? Login</Text>\r\n    </TouchableOpacity>\r\n    <TouchableOpacity\r\n      style={styles.registerBtn}\r\n      onPress={async () => {\r\n        \r\n        //verifier que le mot de passe est correct\r\n        if(password!=secondPassword){\r\n            setErrorMessage('Passwords don\\'t match');\r\n            return;\r\n        };\r\n\r\n        // TODO: Verifier que l'utilisateur n'existe pas deja\r\n\r\n        const success = await submitRegistration(username, email, password);\r\n\r\n        if (!success) {\r\n            //Il faut donner des indices a l'utilisateur\r\n            setErrorMessage('Registration failed. Try against later')\r\n        }\r\n      }}\r\n      >\r\n      <Text style={styles.registerText}>REGISTER</Text> \r\n    </TouchableOpacity> \r\n  </View> \r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  image: {\r\n    marginBottom: 40,\r\n  },\r\n  logo: {\r\n    width: 200,\r\n    height: 53,\r\n    //height: \"7%\",\r\n    marginBottom: 10\r\n  },\r\n  errorBox: {\r\n    backgroundColor: constants.TERTIARYCOLOR,\r\n    width: \"70%\",\r\n    height: 30,\r\n    marginBottom: 0,\r\n    alignItems: \"center\",\r\n  },\r\n  errorText: {\r\n    color: constants.ERRORCOLOR\r\n  },\r\n  inputView: {\r\n    backgroundColor: constants.SECONDARYCOLOR,\r\n    borderRadius: 10,\r\n    width: \"70%\",\r\n    height: 45,\r\n    marginBottom: 20,\r\n    alignItems: \"center\",\r\n  },\r\n  TextInput: {\r\n    height: 50,\r\n    flex: 1,\r\n    padding: 10,\r\n    marginLeft: 20,\r\n  },\r\n  forgot_button: {\r\n    height: 30,\r\n    marginBottom: 30,\r\n  },\r\n  registerBtn: {\r\n    width: \"70%\",\r\n    borderRadius: 10,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: constants.PRIMARYCOLOR,//\"#FF1493\",\r\n  },\r\n  registerText: {\r\n    color: constants.SECONDARYCOLOR\r\n  },\r\n});"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAWpD,OAAOC,WAAW;AAClB,OAAO,KAAKC,SAAS;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzC,eAAe,SAASC,cAAcA,CAAAC,IAAA,EAAuC;EAAA,IAArCC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChD,IAAAC,SAAA,GAAgCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAA0BtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAgC1B,QAAQ,CAAC,EAAE,CAAC;IAAA2B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA4C9B,QAAQ,CAAC,EAAE,CAAC;IAAA+B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAjDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EACxC,IAAAG,UAAA,GAAwClC,QAAQ,CAAC,EAAE,CAAC;IAAAmC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAA7CE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EAEpC,IAAAG,WAAA,GAA+BrC,UAAU,CAACO,WAAW,CAAC;IAA9C+B,kBAAkB,GAAAD,WAAA,CAAlBC,kBAAkB;EAE1B,OACA1B,KAAA,CAACT,IAAI;IAACoC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BhC,IAAA,CAACb,SAAS;MAAC0C,KAAK,EAAC;IAAM,CAAE,CAAC,EAC1B7B,IAAA,CAACN,KAAK;MACJuC,MAAM,EAAEC,OAAO,2BAA2B,CAAE;MAC5CL,KAAK,EAAEC,MAAM,CAACK;IAAK,CACpB,CAAC,EACFnC,IAAA,CAACP,IAAI;MAACoC,KAAK,EAAEC,MAAM,CAACM,QAAS;MAAAJ,QAAA,EAC3BhC,IAAA,CAACR,IAAI;QAACqC,KAAK,EAAEC,MAAM,CAACO,SAAU;QAAAL,QAAA,EAAEP;MAAY,CAAO;IAAC,CAChD,CAAC,EACPzB,IAAA,CAACP,IAAI;MAACoC,KAAK,EAAEC,MAAM,CAACQ,SAAU;MAAAN,QAAA,EAC5BhC,IAAA,CAACL,SAAS;QACRkC,KAAK,EAAEC,MAAM,CAACnC,SAAU;QACxB4C,WAAW,EAAC,UAAU;QACtBC,oBAAoB,EAAC,SAAS;QAC9BC,YAAY,EAAE,SAAAA,aAAChC,QAAQ;UAAA,OAAKC,WAAW,CAACD,QAAQ,CAAC;QAAA;MAAC,CACnD;IAAC,CACE,CAAC,EACPT,IAAA,CAACP,IAAI;MAACoC,KAAK,EAAEC,MAAM,CAACQ,SAAU;MAAAN,QAAA,EAC5BhC,IAAA,CAACL,SAAS;QACRkC,KAAK,EAAEC,MAAM,CAACnC,SAAU;QACxB4C,WAAW,EAAC,OAAO;QACnBC,oBAAoB,EAAC,SAAS;QAC9BC,YAAY,EAAE,SAAAA,aAAC5B,KAAK;UAAA,OAAKC,QAAQ,CAACD,KAAK,CAAC;QAAA;MAAC,CAC1C;IAAC,CACE,CAAC,EACPb,IAAA,CAACP,IAAI;MAACoC,KAAK,EAAEC,MAAM,CAACQ,SAAU;MAAAN,QAAA,EAC5BhC,IAAA,CAACL,SAAS;QACRkC,KAAK,EAAEC,MAAM,CAACnC,SAAU;QACxB4C,WAAW,EAAC,UAAU;QACtBC,oBAAoB,EAAC,SAAS;QAC9BE,eAAe,EAAE,IAAK;QACtBD,YAAY,EAAE,SAAAA,aAACxB,QAAQ;UAAA,OAAKC,WAAW,CAACD,QAAQ,CAAC;QAAA;MAAC,CACnD;IAAC,CACE,CAAC,EACPjB,IAAA,CAACP,IAAI;MAACoC,KAAK,EAAEC,MAAM,CAACQ,SAAU;MAAAN,QAAA,EAC5BhC,IAAA,CAACL,SAAS;QACRkC,KAAK,EAAEC,MAAM,CAACnC,SAAU;QACxB4C,WAAW,EAAC,kBAAkB;QAC9BC,oBAAoB,EAAC,SAAS;QAC9BE,eAAe,EAAE,IAAK;QACtBD,YAAY,EAAE,SAAAA,aAACxB,QAAQ;UAAA,OAAKK,iBAAiB,CAACL,QAAQ,CAAC;QAAA;MAAC,CACzD;IAAC,CACE,CAAC,EACPjB,IAAA,CAACJ,gBAAgB;MACf+C,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMtC,UAAU,CAACuC,QAAQ,CAAC,aAAa,CAAC;MAAA,CAAC;MAAAZ,QAAA,EAElDhC,IAAA,CAACR,IAAI;QAACqC,KAAK,EAAEC,MAAM,CAACe,aAAc;QAAAb,QAAA,EAAC;MAA8B,CAAM;IAAC,CACxD,CAAC,EACnBhC,IAAA,CAACJ,gBAAgB;MACfiC,KAAK,EAAEC,MAAM,CAACgB,WAAY;MAC1BH,OAAO,EAAAI,iBAAA,CAAE,aAAY;QAGnB,IAAG9B,QAAQ,IAAEI,cAAc,EAAC;UACxBK,eAAe,CAAC,wBAAwB,CAAC;UACzC;QACJ;QAAC;QAID,IAAMsB,OAAO,SAASpB,kBAAkB,CAACnB,QAAQ,EAAEI,KAAK,EAAEI,QAAQ,CAAC;QAEnE,IAAI,CAAC+B,OAAO,EAAE;UAEVtB,eAAe,CAAC,wCAAwC,CAAC;QAC7D;MACF,CAAC,CAAC;MAAAM,QAAA,EAEFhC,IAAA,CAACR,IAAI;QAACqC,KAAK,EAAEC,MAAM,CAACmB,YAAa;QAAAjB,QAAA,EAAC;MAAQ,CAAM;IAAC,CACjC,CAAC;EAAA,CACf,CAAC;AAET;AACA,IAAMF,MAAM,GAAGvC,UAAU,CAAC2D,MAAM,CAAC;EAC/BnB,SAAS,EAAE;IACToB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE;IACLC,YAAY,EAAE;EAChB,CAAC;EACDrB,IAAI,EAAE;IACJsB,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IAEVF,YAAY,EAAE;EAChB,CAAC;EACDpB,QAAQ,EAAE;IACRgB,eAAe,EAAEtD,SAAS,CAAC6D,aAAa;IACxCF,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,EAAE;IACVF,YAAY,EAAE,CAAC;IACfH,UAAU,EAAE;EACd,CAAC;EACDhB,SAAS,EAAE;IACTuB,KAAK,EAAE9D,SAAS,CAAC+D;EACnB,CAAC;EACDvB,SAAS,EAAE;IACTc,eAAe,EAAEtD,SAAS,CAACgE,cAAc;IACzCC,YAAY,EAAE,EAAE;IAChBN,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,EAAE;IACVF,YAAY,EAAE,EAAE;IAChBH,UAAU,EAAE;EACd,CAAC;EACD1D,SAAS,EAAE;IACT+D,MAAM,EAAE,EAAE;IACVP,IAAI,EAAE,CAAC;IACPa,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd,CAAC;EACDpB,aAAa,EAAE;IACba,MAAM,EAAE,EAAE;IACVF,YAAY,EAAE;EAChB,CAAC;EACDV,WAAW,EAAE;IACXW,KAAK,EAAE,KAAK;IACZM,YAAY,EAAE,EAAE;IAChBL,MAAM,EAAE,EAAE;IACVL,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBF,eAAe,EAAEtD,SAAS,CAACoE;EAC7B,CAAC;EACDjB,YAAY,EAAE;IACZW,KAAK,EAAE9D,SAAS,CAACgE;EACnB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}