{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport UserContext from \"../contexts/UserContext\";\nimport * as constants from \"../constants\";\nimport client from \"../utils/axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    errorMessage = _useState6[0],\n    setErrorMessage = _useState6[1];\n  var _useContext = useContext(UserContext),\n    currentUser = _useContext.currentUser,\n    submitLogin = _useContext.submitLogin;\n  useEffect(function () {\n    console.log(\"Rendering Login screen\");\n    console.log(client.defaults.headers);\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(Image, {\n      source: require(\"../assets/icon_tight.png\"),\n      style: styles.logo\n    }), _jsx(View, {\n      style: styles.errorBox,\n      children: _jsx(Text, {\n        style: styles.errorText,\n        children: errorMessage\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Username\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(username) {\n          return setUsername(username);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Text, {\n        style: styles.forgot_button,\n        children: \"Forgot Password?\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"RegisterScreen\");\n      },\n      children: _jsx(Text, {\n        style: styles.forgot_button,\n        children: \"Don't have an account yet? Register\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginBtn,\n      onPress: _asyncToGenerator(function* () {\n        submitLogin(username, password).then(function (success) {\n          setErrorMessage('');\n          console.log(success);\n        }).catch(function (success) {\n          setErrorMessage('*Username or password incorrect');\n          console.log(success);\n        });\n      }),\n      children: _jsx(Text, {\n        style: styles.loginText,\n        children: \"LOGIN\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    width: 200,\n    height: 53,\n    marginBottom: 10\n  },\n  errorBox: {\n    backgroundColor: constants.TERTIARYCOLOR,\n    width: \"70%\",\n    height: 30,\n    marginBottom: 0,\n    alignItems: \"center\"\n  },\n  errorText: {\n    color: constants.ERRORCOLOR\n  },\n  inputView: {\n    backgroundColor: constants.SECONDARYCOLOR,\n    borderRadius: 10,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  forgot_button: {\n    height: 30,\n    marginBottom: 30\n  },\n  loginBtn: {\n    width: \"70%\",\n    borderRadius: 10,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n    backgroundColor: constants.PRIMARYCOLOR\n  },\n  loginText: {\n    color: constants.SECONDARYCOLOR\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useContext","useEffect","StyleSheet","Text","View","Image","TextInput","TouchableOpacity","UserContext","constants","client","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","errorMessage","setErrorMessage","_useContext","currentUser","submitLogin","console","log","defaults","headers","style","styles","container","children","source","require","logo","errorBox","errorText","inputView","placeholder","placeholderTextColor","onChangeText","secureTextEntry","forgot_button","onPress","navigate","loginBtn","_asyncToGenerator","then","success","catch","loginText","create","flex","backgroundColor","alignItems","justifyContent","width","height","marginBottom","TERTIARYCOLOR","color","ERRORCOLOR","SECONDARYCOLOR","borderRadius","padding","marginLeft","marginTop","PRIMARYCOLOR"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/LoginScreen.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { NativeStackHeaderProps } from \"@react-navigation/native-stack\"\r\nimport UserContext from '../contexts/UserContext';\r\nimport * as constants from '../constants'\r\nimport client, { updateClientCsrfToken } from \"../utils/axios\"\r\n\r\nexport default function LoginScreen({navigation}: NativeStackHeaderProps) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const { currentUser, submitLogin } = useContext(UserContext);\r\n\r\n  useEffect(() =>{\r\n    // Login screen (and auth stack) should only be shown when currentUser = null\r\n    console.log(\"Rendering Login screen\")\r\n\r\n    console.log(client.defaults.headers)\r\n\r\n  }, [])\r\n  \r\n  return (\r\n  <View style={styles.container}>\r\n    <StatusBar style=\"auto\" />\r\n    <Image\r\n      source={require(\"../assets/icon_tight.png\")}\r\n      style={styles.logo}\r\n    />\r\n    <View style={styles.errorBox}>\r\n      <Text style={styles.errorText}>{errorMessage}</Text>\r\n    </View>\r\n    <View style={styles.inputView}>\r\n      <TextInput\r\n        style={styles.TextInput}\r\n        placeholder=\"Username\"\r\n        placeholderTextColor=\"#003f5c\"\r\n        onChangeText={(username) => setUsername(username)}\r\n      /> \r\n    </View> \r\n    <View style={styles.inputView}>\r\n      <TextInput\r\n        style={styles.TextInput}\r\n        placeholder=\"Password\"\r\n        placeholderTextColor=\"#003f5c\"\r\n        secureTextEntry={true}\r\n        onChangeText={(password) => setPassword(password)}\r\n      />\r\n    </View>\r\n    <TouchableOpacity>\r\n      <Text style={styles.forgot_button}>Forgot Password?</Text>\r\n    </TouchableOpacity>\r\n    <TouchableOpacity\r\n      onPress={() => navigation.navigate(\"RegisterScreen\")}\r\n    >\r\n      <Text style={styles.forgot_button}>Don't have an account yet? Register</Text>\r\n    </TouchableOpacity>\r\n    <TouchableOpacity\r\n      style={styles.loginBtn}\r\n      onPress={async () => {\r\n\r\n        submitLogin(username, password).then(success => {\r\n            // Login was successful\r\n            setErrorMessage('');\r\n            console.log(success);\r\n        }).catch(success => {\r\n            // Login was unsuccessful\r\n            setErrorMessage('*Username or password incorrect');\r\n            console.log(success);\r\n        });\r\n      }}\r\n      >\r\n      <Text style={styles.loginText}>LOGIN</Text> \r\n    </TouchableOpacity> \r\n  </View> \r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  logo: {\r\n    width: 200,\r\n    height: 53,\r\n    marginBottom: 10\r\n  },\r\n  errorBox: {\r\n    backgroundColor: constants.TERTIARYCOLOR,\r\n    width: \"70%\",\r\n    height: 30,\r\n    marginBottom: 0,\r\n    alignItems: \"center\",\r\n  },\r\n  errorText: {\r\n    color: constants.ERRORCOLOR\r\n  },\r\n  inputView: {\r\n    backgroundColor: constants.SECONDARYCOLOR,//\"#FFC0CB\",\r\n    borderRadius: 10,\r\n    width: \"70%\",\r\n    height: 45,\r\n    marginBottom: 20,\r\n    alignItems: \"center\",\r\n  },\r\n  TextInput: {\r\n    height: 50,\r\n    flex: 1,\r\n    padding: 10,\r\n    marginLeft: 20,\r\n  },\r\n  forgot_button: {\r\n    height: 30,\r\n    marginBottom: 30,\r\n  },\r\n  loginBtn: {\r\n    width: \"70%\",\r\n    borderRadius: 10,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10,\r\n    backgroundColor: constants.PRIMARYCOLOR,//\"#FF1493\",\r\n  },\r\n  loginText: {\r\n    color: constants.SECONDARYCOLOR\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}