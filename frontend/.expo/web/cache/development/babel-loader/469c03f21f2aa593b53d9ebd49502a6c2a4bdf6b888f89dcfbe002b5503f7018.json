{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport client, { updateClientCsrfToken } from \"../utils/axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar UserContext = React.createContext();\nexport default UserContext;\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  useEffect(function () {\n    getUser();\n  }, []);\n  var getUser = function getUser() {\n    client.get(\"/api/users/me\").then(function (res) {\n      console.log(res.data.user);\n      setCurrentUser(res.data.user);\n    }).catch(function (error) {\n      setCurrentUser(null);\n      console.log(error);\n    });\n  };\n  var submitRegistration = function submitRegistration(username, email, password) {\n    return new Promise(function (resolve, reject) {\n      client.post(\"/api/register\", {\n        username: username,\n        email: email,\n        password: password,\n        withCredentials: true\n      }).then(function (res) {\n        console.log('Account creation successful');\n        submitLogin(username, password);\n        resolve(true);\n      }).catch(function (error) {\n        console.log('Account creation unsuccessful');\n        reject(error);\n      });\n    });\n  };\n  var submitLogin = function submitLogin(username, password) {\n    return new Promise(function (resolve, reject) {\n      client.post(\"/api/login\", {\n        username: username,\n        password: password,\n        withCredentials: true\n      }).then(function (res) {\n        updateClientCsrfToken();\n        getUser();\n        console.log('Login successful!');\n        resolve(true);\n      }).catch(function (error) {\n        setCurrentUser(null);\n        console.log('Login unsuccessful');\n        reject(error);\n      });\n    });\n  };\n  var submitLogout = function submitLogout() {\n    client.post(\"/api/logout\").then(function (res) {\n      setCurrentUser(null);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n  return _jsx(UserContext.Provider, {\n    value: {\n      currentUser: currentUser,\n      submitRegistration: submitRegistration,\n      submitLogin: submitLogin,\n      submitLogout: submitLogout\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","useState","useEffect","client","updateClientCsrfToken","jsx","_jsx","UserContext","createContext","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","currentUser","setCurrentUser","getUser","get","then","res","console","log","data","user","catch","error","submitRegistration","username","email","password","Promise","resolve","reject","post","withCredentials","submitLogin","submitLogout","Provider","value"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/contexts/UserContext.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport client, { updateClientCsrfToken } from \"../utils/axios\"\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport default UserContext;\r\n\r\n// Create a provider component\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    }, []);\r\n\r\n    const getUser = () => {\r\n        client.get(\"/api/users/me\")\r\n        .then(function(res) {\r\n            console.log(res.data.user);\r\n            setCurrentUser(res.data.user);\r\n        })\r\n        .catch(function(error) {\r\n            setCurrentUser(null);\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    const submitRegistration = (username, email, password) => {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            client.post(\r\n            \"/api/register\",\r\n            {\r\n                username: username,\r\n                email: email,\r\n                password: password,\r\n                withCredentials: true\r\n            }\r\n            ).then(function(res) {\r\n                console.log('Account creation successful');\r\n                submitLogin(username, password);\r\n                resolve(true);\r\n            }).catch(function(error) {\r\n                console.log('Account creation unsuccessful');\r\n                reject(error);\r\n            });\r\n        });\r\n    };\r\n    \r\n    const submitLogin = (username, password) => {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            client.post(\r\n                \"/api/login\",\r\n                {\r\n                username: username,\r\n                password: password,\r\n                withCredentials: true\r\n                }\r\n            ).then(function(res) {\r\n                // Fetch the new CSRF token from the db and update the axios client header\r\n                updateClientCsrfToken();\r\n                // Get the current user data and set the context\r\n                getUser();\r\n                console.log('Login successful!')\r\n                resolve(true);\r\n            }).catch(function(error) {\r\n                setCurrentUser(null);\r\n                console.log('Login unsuccessful');\r\n                reject(error);\r\n            });\r\n        });\r\n    };\r\n    \r\n    const submitLogout = () => {\r\n        client.post(\r\n            \"/api/logout\"\r\n        ).then(function(res) {\r\n            setCurrentUser(null);\r\n        }).catch(\r\n            error => console.log(error)\r\n            );\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ currentUser, submitRegistration, submitLogin, submitLogout }}>\r\n          {children}\r\n        </UserContext.Provider>\r\n      );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}