{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Toby Usher\\\\Documents\\\\dev\\\\quivo-app\\\\frontend\\\\components\\\\BottomNavBar.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport UserContext from \"../contexts/UserContext\";\nimport * as constants from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BottomNavBar(_ref) {\n  var _this = this;\n  var hilighted = _ref.hilighted,\n    navigation = _ref.navigation;\n  var _useContext = useContext(UserContext),\n    currentLanguageCode = _useContext.currentLanguageCode;\n  var buttons = [{\n    inactiveImage: require('../assets/icons/freq-list-inactive-small.png'),\n    activeImage: require('../assets/icons/freq-list-active-small.png'),\n    navigateTo: 'WordList'\n  }, {\n    inactiveImage: require('../assets/icons/learn-inactive-small.png'),\n    activeImage: require('../assets/icons/learn-active-small.png'),\n    navigateTo: 'Learn'\n  }, {\n    inactiveImage: require('../assets/icons/stories-inactive-small.png'),\n    activeImage: require('../assets/icons/stories-active-small.png'),\n    navigateTo: 'Stories'\n  }, {\n    inactiveImage: require('../assets/icons/user-inactive-small.png'),\n    activeImage: require('../assets/icons/user-active-small.png'),\n    navigateTo: 'Account'\n  }];\n  if (currentLanguageCode === 'ru') {\n    buttons.splice(1, 0, {\n      inactiveImage: require('../assets/icons/cyrillic-inactive-small.png'),\n      activeImage: require('../assets/icons/cyrillic-active-small.png'),\n      navigateTo: 'LearnCyrillic'\n    });\n  }\n  var buttonWidth = currentLanguageCode === 'ru' ? '20%' : '25%';\n  var renderButton = function renderButton(inactiveImage, activeImage, navigateTo) {\n    return _jsxDEV(_Fragment, {\n      children: _jsxDEV(TouchableOpacity, {\n        activeOpacity: 1,\n        style: _objectSpread({\n          width: buttonWidth\n        }, styles.button),\n        onPress: function onPress() {\n          navigation.navigate(navigateTo);\n        },\n        children: _jsxDEV(View, {\n          style: _objectSpread({\n            borderColor: hilighted === navigateTo ? constants.PRIMARYCOLOR : constants.TERTIARYCOLOR\n          }, styles.faIconContainer),\n          children: _jsxDEV(Image, {\n            style: styles.iconImage,\n            source: hilighted === navigateTo ? activeImage : inactiveImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: buttons.map(function (item) {\n      return renderButton(item.inactiveImage, item.activeImage, item.navigateTo);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    position: 'absolute',\n    height: 60,\n    bottom: 0,\n    borderTopWidth: 3,\n    borderColor: constants.GREY,\n    backgroundColor: constants.TERTIARYCOLOR\n  },\n  button: {\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    height: '100%'\n  },\n  faIconContainer: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    padding: 7\n  },\n  faIcon: {},\n  iconImage: {\n    width: 30,\n    height: 30\n  },\n  titleContainer: {\n    padding: 10,\n    textAlign: 'center',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  titleText: {\n    fontSize: constants.H2FONTSIZE,\n    fontFamily: constants.FONTFAMILYBOLD,\n    color: constants.BLACK,\n    marginTop: 'auto',\n    marginBottom: 'auto'\n  }\n});","map":{"version":3,"names":["useContext","View","Image","StyleSheet","TouchableOpacity","UserContext","constants","jsxDEV","_jsxDEV","Fragment","_Fragment","BottomNavBar","_ref","_this","hilighted","navigation","_useContext","currentLanguageCode","buttons","inactiveImage","require","activeImage","navigateTo","splice","buttonWidth","renderButton","children","activeOpacity","style","_objectSpread","width","styles","button","onPress","navigate","borderColor","PRIMARYCOLOR","TERTIARYCOLOR","faIconContainer","iconImage","source","fileName","_jsxFileName","lineNumber","columnNumber","container","map","item","create","flexDirection","position","height","bottom","borderTopWidth","GREY","backgroundColor","marginTop","marginBottom","marginLeft","marginRight","padding","faIcon","titleContainer","textAlign","titleText","fontSize","H2FONTSIZE","fontFamily","FONTFAMILYBOLD","color","BLACK"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/components/BottomNavBar.tsx"],"sourcesContent":["import { useState, useContext } from 'react';\r\nimport { View, Image, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { NativeStackHeaderProps } from \"@react-navigation/native-stack\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\r\nimport { faHome, faBars, faUser } from '@fortawesome/free-solid-svg-icons';\r\n// Contexts\r\nimport UserContext from \"../contexts/UserContext\";\r\n// Constants\r\nimport * as constants from \"../constants\";\r\n\r\ninterface IBottomNavBarProps {\r\n    hilighted: 'WordList' | 'Learn' | 'Stories' | 'Account' | 'LearnCyrillic',\r\n    navigation: any\r\n}\r\n\r\nexport default function BottomNavBar({hilighted, navigation}: IBottomNavBarProps) {\r\n\r\n    //const [activeButton, setActiveButton] = useState('Learn');\r\n    const { currentLanguageCode } = useContext(UserContext);\r\n\r\n    const buttons = [\r\n        {\r\n            inactiveImage: require('../assets/icons/freq-list-inactive-small.png'),\r\n            activeImage: require('../assets/icons/freq-list-active-small.png'),\r\n            navigateTo: 'WordList'\r\n        },\r\n        {\r\n            inactiveImage: require('../assets/icons/learn-inactive-small.png'),\r\n            activeImage: require('../assets/icons/learn-active-small.png'),\r\n            navigateTo: 'Learn'\r\n        },\r\n        {\r\n            inactiveImage: require('../assets/icons/stories-inactive-small.png'),\r\n            activeImage: require('../assets/icons/stories-active-small.png'),\r\n            navigateTo: 'Stories'\r\n        },\r\n        {\r\n            inactiveImage: require('../assets/icons/user-inactive-small.png'),\r\n            activeImage: require('../assets/icons/user-active-small.png'),\r\n            navigateTo: 'Account'\r\n        },\r\n    ];\r\n\r\n    // Should make this a custom hook so can update when language code\r\n    // changes\r\n    if (currentLanguageCode === 'ru') {\r\n        buttons.splice(1, 0, {\r\n            inactiveImage: require('../assets/icons/cyrillic-inactive-small.png'),\r\n            activeImage: require('../assets/icons/cyrillic-active-small.png'),\r\n            navigateTo: 'LearnCyrillic'\r\n        });\r\n    }\r\n\r\n    const buttonWidth = currentLanguageCode === 'ru' ? '20%' : '25%';\r\n    \r\n    const renderButton = (inactiveImage: Image, activeImage: Image, navigateTo: string) => (\r\n        <>\r\n        <TouchableOpacity\r\n            activeOpacity={1}\r\n            style={{\r\n                width: buttonWidth,\r\n                ...styles.button\r\n            }}\r\n            onPress={() => {\r\n                //setActiveButton(toScreen);\r\n                navigation.navigate(navigateTo);\r\n            }}\r\n            >\r\n            <View style={{borderColor: hilighted === navigateTo ? constants.PRIMARYCOLOR : constants.TERTIARYCOLOR, ...styles.faIconContainer}}>\r\n                {/*<FontAwesomeIcon style={styles.faIcon} icon={icon} size={25} color={hilighted === navigateTo ? constants.PRIMARYCOLOR : constants.GREY} />*/}\r\n                <Image\r\n                    style={styles.iconImage}\r\n                    source={hilighted === navigateTo ? activeImage : inactiveImage}\r\n                    />\r\n            </View>\r\n        </TouchableOpacity>\r\n        </>\r\n    )\r\n    \r\n    return (\r\n        <View style={styles.container}>\r\n            {buttons.map((item) => renderButton(item.inactiveImage, item.activeImage, item.navigateTo))}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        position: 'absolute',\r\n        height: 60,\r\n        bottom: 0,\r\n        borderTopWidth: 3,\r\n        borderColor: constants.GREY,\r\n        backgroundColor: constants.TERTIARYCOLOR\r\n        //marginHorizontal: 10\r\n    },\r\n    button: {\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto',\r\n        height: '100%'\r\n    },\r\n    faIconContainer: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto',\r\n        //borderWidth: 2,\r\n        //borderRadius: 10,\r\n        padding: 7\r\n    },\r\n    faIcon: {\r\n    },\r\n    iconImage: {\r\n        width: 30,\r\n        height: 30\r\n    },\r\n    titleContainer: {\r\n        padding: 10,\r\n        textAlign: 'center',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    titleText: {\r\n        fontSize: constants.H2FONTSIZE,\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        color: constants.BLACK,\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto'\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}