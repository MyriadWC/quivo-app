{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Toby Usher\\\\Documents\\\\dev\\\\quivo-app\\\\frontend\\\\screens\\\\WordListScreen\\\\components\\\\WordItem.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useEffect, useState, useContext, useRef } from 'react';\nimport UserContext from '../../../contexts/UserContext';\nimport * as constants from '../../../constants';\nimport client from '../../../utils/axios';\nimport { speak } from '../../../utils/text';\nimport { capitalizeFirstLetter } from '../../../utils/text';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WordItem(_ref) {\n  var navigation = _ref.navigation,\n    item = _ref.item,\n    primaryColor = _ref.primaryColor,\n    showKnownWords = _ref.showKnownWords;\n  var _useContext = useContext(UserContext),\n    currentUser = _useContext.currentUser,\n    currentLanguageCode = _useContext.currentLanguageCode,\n    setKnownWords = _useContext.setKnownWords,\n    dailyWordCount = _useContext.dailyWordCount,\n    setDailyWordCount = _useContext.setDailyWordCount,\n    narrationSpeed = _useContext.narrationSpeed;\n  var selectedStyling = {\n    'backgroundColor': primaryColor,\n    'color': constants.TERTIARYCOLOR,\n    'numberBox': {\n      'backgroundColor': constants.TERTIARYCOLOR,\n      'color': primaryColor\n    }\n  };\n  var unselectedStyling = {\n    'backgroundColor': primaryColor + '44',\n    'color': constants.BLACK,\n    'numberBox': {\n      'backgroundColor': primaryColor,\n      'color': constants.TERTIARYCOLOR\n    }\n  };\n  var _useState = useState(item.user_knows),\n    _useState2 = _slicedToArray(_useState, 2),\n    userKnows = _useState2[0],\n    setUserKnows = _useState2[1];\n  var _useState3 = useState(item.user_knows ? selectedStyling : unselectedStyling),\n    _useState4 = _slicedToArray(_useState3, 2),\n    styling = _useState4[0],\n    setStyling = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    lastPress = _useState6[0],\n    setLastPress = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    pressedOnce = _useState8[0],\n    _setPressedOnce = _useState8[1];\n  var pressedOnceRef = useRef(pressedOnce);\n  useEffect(function () {\n    setStyling(userKnows ? selectedStyling : unselectedStyling);\n  }, [userKnows]);\n  var setPressedOnce = function setPressedOnce(value) {\n    pressedOnceRef.current = value;\n    _setPressedOnce(value);\n  };\n  var tapDelayTimeout;\n  var definitionDisplayTimeout;\n  var handlePress = function handlePress() {\n    var currentTime = new Date().getTime();\n    if (currentTime - lastPress < constants.DOUBLETAPDELAY) {\n      if (dailyWordCount < constants.MAXDAILYWORDS) {\n        setUserKnows(!userKnows);\n        client.post('api/users/' + currentUser.user_id + '/toggleknownword/' + item.word).then(function (res) {\n          if (res.data.word_added) {\n            setKnownWords(function (prevKnownWords) {\n              return prevKnownWords + 1;\n            });\n            setDailyWordCount(function (prevDailyWordCount) {\n              return prevDailyWordCount + 1;\n            });\n          } else {\n            setKnownWords(function (prevKnownWords) {\n              return prevKnownWords - 1;\n            });\n            setDailyWordCount(function (prevDailyWordCount) {\n              return prevDailyWordCount - 1;\n            });\n          }\n        }).catch(function (e) {\n          console.log(e.response.data);\n        });\n      } else {\n        navigation.navigate('MaxWordsReached');\n      }\n      setLastPress(0);\n      setPressedOnce(false);\n      clearTimeout(tapDelayTimeout);\n      clearTimeout(definitionDisplayTimeout);\n    } else {\n      setPressedOnce(true);\n      speak(item.word, currentLanguageCode, narrationSpeed);\n    }\n    setLastPress(currentTime);\n  };\n  console.log(item);\n  return _jsxDEV(_Fragment, {\n    children: (!userKnows || userKnows && showKnownWords) && _jsxDEV(TouchableOpacity, {\n      style: _objectSpread({\n        backgroundColor: styling.backgroundColor\n      }, styles.wordItem),\n      activeOpacity: 1,\n      onPress: function onPress() {\n        handlePress();\n      },\n      children: [_jsxDEV(View, {\n        style: _objectSpread({\n          backgroundColor: styling.numberBox.backgroundColor\n        }, styles.numberContainer),\n        children: _jsxDEV(Text, {\n          style: _objectSpread({\n            color: styling.numberBox.color\n          }, styles.numberText),\n          children: Math.round(item.rank)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), _jsxDEV(View, {\n        style: styles.word,\n        children: [_jsxDEV(Text, {\n          style: _objectSpread({\n            color: styling.color\n          }, styles.wordText),\n          children: capitalizeFirstLetter(item.translation)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), _jsxDEV(Text, {\n          style: _objectSpread({\n            color: styling.color\n          }, styles.wordText),\n          children: capitalizeFirstLetter(item.word)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n;\nvar styles = StyleSheet.create({\n  wordItem: {\n    flexDirection: \"row\",\n    borderRadius: 10,\n    marginBottom: 5,\n    padding: 10\n  },\n  numberContainer: {\n    borderRadius: 5,\n    padding: 5,\n    marginRight: 10\n  },\n  numberText: {\n    fontFamily: constants.FONTFAMILYBOLD,\n    fontSize: constants.H3FONTSIZE\n  },\n  word: {\n    marginTop: 'auto',\n    marginBottom: 'auto'\n  },\n  wordText: {\n    fontFamily: constants.FONTFAMILYBOLD,\n    fontSize: constants.H2FONTSIZE\n  }\n});","map":{"version":3,"names":["useEffect","useState","useContext","useRef","UserContext","constants","client","speak","capitalizeFirstLetter","jsxDEV","_jsxDEV","Fragment","_Fragment","WordItem","_ref","navigation","item","primaryColor","showKnownWords","_useContext","currentUser","currentLanguageCode","setKnownWords","dailyWordCount","setDailyWordCount","narrationSpeed","selectedStyling","TERTIARYCOLOR","unselectedStyling","BLACK","_useState","user_knows","_useState2","_slicedToArray","userKnows","setUserKnows","_useState3","_useState4","styling","setStyling","_useState5","_useState6","lastPress","setLastPress","_useState7","_useState8","pressedOnce","_setPressedOnce","pressedOnceRef","setPressedOnce","value","current","tapDelayTimeout","definitionDisplayTimeout","handlePress","currentTime","Date","getTime","DOUBLETAPDELAY","MAXDAILYWORDS","post","user_id","word","then","res","data","word_added","prevKnownWords","prevDailyWordCount","catch","e","console","log","response","navigate","clearTimeout","children","TouchableOpacity","style","_objectSpread","backgroundColor","styles","wordItem","activeOpacity","onPress","View","numberBox","numberContainer","Text","color","numberText","Math","round","rank","fileName","_jsxFileName","lineNumber","columnNumber","wordText","translation","StyleSheet","create","flexDirection","borderRadius","marginBottom","padding","marginRight","fontFamily","FONTFAMILYBOLD","fontSize","H3FONTSIZE","marginTop","H2FONTSIZE"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/WordListScreen/components/WordItem.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity, StyleSheet} from 'react-native';\r\nimport { useEffect, useState, useContext, useRef } from 'react';\r\n// Contexts\r\nimport UserContext from '../../../contexts/UserContext';\r\n// Constants\r\nimport * as constants from '../../../constants';\r\n// Utils\r\nimport client from '../../../utils/axios';\r\nimport { speak } from '../../../utils/text';\r\nimport { capitalizeFirstLetter } from '../../../utils/text';\r\n\r\n// TODO: Move this to interface folder and import\r\ninterface IWord {\r\n    id: number,\r\n    rank: number,\r\n    word: string,\r\n    translation: string,\r\n    frequency: number,\r\n    user_knows: boolean\r\n}\r\n\r\ninterface IWordItemProps {\r\n    navigation: any,\r\n    item: IWord,\r\n    primaryColor: string,\r\n    showKnownWords: boolean\r\n}\r\n\r\nexport default function WordItem({navigation, item, primaryColor, showKnownWords}: IWordItemProps){\r\n\r\n    const { currentUser, currentLanguageCode, setKnownWords, dailyWordCount, setDailyWordCount, narrationSpeed } = useContext(UserContext);\r\n\r\n    const selectedStyling = {\r\n        'backgroundColor': primaryColor,\r\n        'color': constants.TERTIARYCOLOR,\r\n        'numberBox': {\r\n            'backgroundColor': constants.TERTIARYCOLOR,\r\n            'color': primaryColor\r\n        }\r\n    }\r\n\r\n    const unselectedStyling = {\r\n        'backgroundColor': primaryColor + '44',\r\n        'color': constants.BLACK,\r\n        'numberBox': {\r\n            'backgroundColor': primaryColor,\r\n            'color': constants.TERTIARYCOLOR\r\n        }\r\n    }\r\n    \r\n    const [userKnows, setUserKnows] = useState(item.user_knows);\r\n    const [styling, setStyling] = useState(item.user_knows ? selectedStyling : unselectedStyling);\r\n    const [lastPress, setLastPress] = useState(0);\r\n    const [pressedOnce, _setPressedOnce] = useState(false);\r\n\r\n    // This is super messy but it's the only way I could find to achieve this behaviour\r\n    const pressedOnceRef = useRef(pressedOnce);\r\n\r\n    useEffect(() => {\r\n        // Update styling\r\n        setStyling(userKnows ? selectedStyling : unselectedStyling);\r\n    }, [userKnows]);\r\n    \r\n    const setPressedOnce = (value: boolean) => {\r\n        pressedOnceRef.current = value;\r\n        _setPressedOnce(value);\r\n    };\r\n    \r\n    // setTimeout rend un identifiant numérique unique\r\n    let tapDelayTimeout: TimeOut;\r\n    let definitionDisplayTimeout: TimeOut;\r\n\r\n    const handlePress = () => {\r\n\r\n        const currentTime = new Date().getTime();\r\n\r\n        // L'utilisateur a tapé deux fois\r\n        if (currentTime - lastPress < constants.DOUBLETAPDELAY) {\r\n            if (dailyWordCount < constants.MAXDAILYWORDS) {\r\n                setUserKnows(!userKnows);\r\n                client.post(\r\n                    'api/users/' + currentUser.user_id + '/toggleknownword/' + item.word\r\n                ).then(function(res) {\r\n                    if (res.data.word_added) {\r\n                        setKnownWords(prevKnownWords => prevKnownWords + 1)\r\n                        setDailyWordCount(prevDailyWordCount => prevDailyWordCount + 1)\r\n                    } else {\r\n                        setKnownWords(prevKnownWords => prevKnownWords - 1)\r\n                        setDailyWordCount(prevDailyWordCount => prevDailyWordCount - 1)\r\n                    }\r\n                }).catch(function(e) {\r\n                    console.log(e.response.data)\r\n                });\r\n            } else {\r\n                navigation.navigate('MaxWordsReached');\r\n            }\r\n\r\n            setLastPress(0);\r\n            setPressedOnce(false);\r\n\r\n            // Supprimer les timeOut q'on a initialisés lors de la première tape pour ne\r\n            // plus afficher la traduction\r\n            clearTimeout(tapDelayTimeout);\r\n            clearTimeout(definitionDisplayTimeout);\r\n\r\n        } else {\r\n            setPressedOnce(true);\r\n            speak(item.word, currentLanguageCode, narrationSpeed);\r\n        }\r\n\r\n        setLastPress(currentTime);\r\n\r\n    };\r\n    // TODO: It would be a better user experience if I did this include known words filter\r\n    // on the backend and reloaded the words list. It also takes logic out of WordItem which would\r\n    // speed it up\r\n    console.log(item);\r\n    return (<>\r\n        {(!userKnows || (userKnows && showKnownWords)) &&\r\n        <TouchableOpacity\r\n            style={{\r\n                backgroundColor: styling.backgroundColor,\r\n                ...styles.wordItem\r\n            }}\r\n            activeOpacity={1}\r\n            onPress={() => {handlePress()}}\r\n            >\r\n            <View style={{\r\n                backgroundColor: styling.numberBox.backgroundColor,\r\n                ...styles.numberContainer\r\n                }}>\r\n                <Text style={{color: styling.numberBox.color, ...styles.numberText}}>{Math.round(item.rank)}</Text>\r\n            </View>\r\n            <View style={styles.word}>\r\n                <Text style={{\r\n                    color: styling.color,\r\n                    ...styles.wordText\r\n                    }}>\r\n                    {capitalizeFirstLetter(item.translation)}\r\n                </Text>\r\n                <Text style={{\r\n                    color: styling.color,\r\n                    ...styles.wordText\r\n                    }}>\r\n                    {capitalizeFirstLetter(item.word)}\r\n                </Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    }</>);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    wordItem: {\r\n        flexDirection: \"row\",\r\n        borderRadius: 10,\r\n        marginBottom: 5,\r\n        padding: 10\r\n    },\r\n    numberContainer: {\r\n        borderRadius: 5,\r\n        padding: 5,\r\n        marginRight: 10\r\n    },\r\n    numberText: {\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        fontSize: constants.H3FONTSIZE\r\n    },\r\n    word: {\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto'\r\n    },\r\n    wordText: {\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        fontSize: constants.H2FONTSIZE\r\n    }\r\n});"],"mappings":";;;;;;;;;AACA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AAE/D,OAAOC,WAAW,MAAM,+BAA+B;AAEvD,OAAO,KAAKC,SAAS,MAAM,oBAAoB;AAE/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,SAASC,qBAAqB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAmB5D,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAkE;EAAA,IAAhEC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEC,YAAY,GAAAH,IAAA,CAAZG,YAAY;IAAEC,cAAc,GAAAJ,IAAA,CAAdI,cAAc;EAE5E,IAAAC,WAAA,GAA+GjB,UAAU,CAACE,WAAW,CAAC;IAA9HgB,WAAW,GAAAD,WAAA,CAAXC,WAAW;IAAEC,mBAAmB,GAAAF,WAAA,CAAnBE,mBAAmB;IAAEC,aAAa,GAAAH,WAAA,CAAbG,aAAa;IAAEC,cAAc,GAAAJ,WAAA,CAAdI,cAAc;IAAEC,iBAAiB,GAAAL,WAAA,CAAjBK,iBAAiB;IAAEC,cAAc,GAAAN,WAAA,CAAdM,cAAc;EAE1G,IAAMC,eAAe,GAAG;IACpB,iBAAiB,EAAET,YAAY;IAC/B,OAAO,EAAEZ,SAAS,CAACsB,aAAa;IAChC,WAAW,EAAE;MACT,iBAAiB,EAAEtB,SAAS,CAACsB,aAAa;MAC1C,OAAO,EAAEV;IACb;EACJ,CAAC;EAED,IAAMW,iBAAiB,GAAG;IACtB,iBAAiB,EAAEX,YAAY,GAAG,IAAI;IACtC,OAAO,EAAEZ,SAAS,CAACwB,KAAK;IACxB,WAAW,EAAE;MACT,iBAAiB,EAAEZ,YAAY;MAC/B,OAAO,EAAEZ,SAAS,CAACsB;IACvB;EACJ,CAAC;EAED,IAAAG,SAAA,GAAkC7B,QAAQ,CAACe,IAAI,CAACe,UAAU,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAApDI,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAA8BnC,QAAQ,CAACe,IAAI,CAACe,UAAU,GAAGL,eAAe,GAAGE,iBAAiB,CAAC;IAAAS,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtFE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAkCvC,QAAQ,CAAC,CAAC,CAAC;IAAAwC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAtCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAuC3C,QAAQ,CAAC,KAAK,CAAC;IAAA4C,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA/CE,WAAW,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EAGnC,IAAMG,cAAc,GAAG7C,MAAM,CAAC2C,WAAW,CAAC;EAE1C9C,SAAS,CAAC,YAAM;IAEZuC,UAAU,CAACL,SAAS,GAAGR,eAAe,GAAGE,iBAAiB,CAAC;EAC/D,CAAC,EAAE,CAACM,SAAS,CAAC,CAAC;EAEf,IAAMe,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAc,EAAK;IACvCF,cAAc,CAACG,OAAO,GAAGD,KAAK;IAC9BH,eAAe,CAACG,KAAK,CAAC;EAC1B,CAAC;EAGD,IAAIE,eAAwB;EAC5B,IAAIC,wBAAiC;EAErC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAEtB,IAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAGxC,IAAIF,WAAW,GAAGb,SAAS,GAAGrC,SAAS,CAACqD,cAAc,EAAE;MACpD,IAAInC,cAAc,GAAGlB,SAAS,CAACsD,aAAa,EAAE;QAC1CxB,YAAY,CAAC,CAACD,SAAS,CAAC;QACxB5B,MAAM,CAACsD,IAAI,CACP,YAAY,GAAGxC,WAAW,CAACyC,OAAO,GAAG,mBAAmB,GAAG7C,IAAI,CAAC8C,IACpE,CAAC,CAACC,IAAI,CAAC,UAASC,GAAG,EAAE;UACjB,IAAIA,GAAG,CAACC,IAAI,CAACC,UAAU,EAAE;YACrB5C,aAAa,CAAC,UAAA6C,cAAc;cAAA,OAAIA,cAAc,GAAG,CAAC;YAAA,EAAC;YACnD3C,iBAAiB,CAAC,UAAA4C,kBAAkB;cAAA,OAAIA,kBAAkB,GAAG,CAAC;YAAA,EAAC;UACnE,CAAC,MAAM;YACH9C,aAAa,CAAC,UAAA6C,cAAc;cAAA,OAAIA,cAAc,GAAG,CAAC;YAAA,EAAC;YACnD3C,iBAAiB,CAAC,UAAA4C,kBAAkB;cAAA,OAAIA,kBAAkB,GAAG,CAAC;YAAA,EAAC;UACnE;QACJ,CAAC,CAAC,CAACC,KAAK,CAAC,UAASC,CAAC,EAAE;UACjBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,QAAQ,CAACR,IAAI,CAAC;QAChC,CAAC,CAAC;MACN,CAAC,MAAM;QACHlD,UAAU,CAAC2D,QAAQ,CAAC,iBAAiB,CAAC;MAC1C;MAEA/B,YAAY,CAAC,CAAC,CAAC;MACfM,cAAc,CAAC,KAAK,CAAC;MAIrB0B,YAAY,CAACvB,eAAe,CAAC;MAC7BuB,YAAY,CAACtB,wBAAwB,CAAC;IAE1C,CAAC,MAAM;MACHJ,cAAc,CAAC,IAAI,CAAC;MACpB1C,KAAK,CAACS,IAAI,CAAC8C,IAAI,EAAEzC,mBAAmB,EAAEI,cAAc,CAAC;IACzD;IAEAkB,YAAY,CAACY,WAAW,CAAC;EAE7B,CAAC;EAIDgB,OAAO,CAACC,GAAG,CAACxD,IAAI,CAAC;EACjB,OAAQN,OAAA,CAAAE,SAAA;IAAAgE,QAAA,EACH,CAAC,CAAC1C,SAAS,IAAKA,SAAS,IAAIhB,cAAe,KAC7CR,OAAA,CAACmE,gBAAgB;MACbC,KAAK,EAAAC,aAAA;QACDC,eAAe,EAAE1C,OAAO,CAAC0C;MAAe,GACrCC,MAAM,CAACC,QAAQ,CACpB;MACFC,aAAa,EAAE,CAAE;MACjBC,OAAO,EAAE,SAAAA,QAAA,EAAM;QAAC9B,WAAW,CAAC,CAAC;MAAA,CAAE;MAAAsB,QAAA,GAE/BlE,OAAA,CAAC2E,IAAI;QAACP,KAAK,EAAAC,aAAA;UACPC,eAAe,EAAE1C,OAAO,CAACgD,SAAS,CAACN;QAAe,GAC/CC,MAAM,CAACM,eAAe,CACvB;QAAAX,QAAA,EACFlE,OAAA,CAAC8E,IAAI;UAACV,KAAK,EAAAC,aAAA;YAAGU,KAAK,EAAEnD,OAAO,CAACgD,SAAS,CAACG;UAAK,GAAKR,MAAM,CAACS,UAAU,CAAE;UAAAd,QAAA,EAAEe,IAAI,CAACC,KAAK,CAAC5E,IAAI,CAAC6E,IAAI;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjG,CAAC,EACPvF,OAAA,CAAC2E,IAAI;QAACP,KAAK,EAAEG,MAAM,CAACnB,IAAK;QAAAc,QAAA,GACrBlE,OAAA,CAAC8E,IAAI;UAACV,KAAK,EAAAC,aAAA;YACPU,KAAK,EAAEnD,OAAO,CAACmD;UAAK,GACjBR,MAAM,CAACiB,QAAQ,CAChB;UAAAtB,QAAA,EACDpE,qBAAqB,CAACQ,IAAI,CAACmF,WAAW;QAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,EACPvF,OAAA,CAAC8E,IAAI;UAACV,KAAK,EAAAC,aAAA;YACPU,KAAK,EAAEnD,OAAO,CAACmD;UAAK,GACjBR,MAAM,CAACiB,QAAQ,CAChB;UAAAtB,QAAA,EACDpE,qBAAqB,CAACQ,IAAI,CAAC8C,IAAI;QAAC;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC,gBACpB,CAAC;AACR;AAAC;AAED,IAAMhB,MAAM,GAAGmB,UAAU,CAACC,MAAM,CAAC;EAC7BnB,QAAQ,EAAE;IACNoB,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE;EACb,CAAC;EACDlB,eAAe,EAAE;IACbgB,YAAY,EAAE,CAAC;IACfE,OAAO,EAAE,CAAC;IACVC,WAAW,EAAE;EACjB,CAAC;EACDhB,UAAU,EAAE;IACRiB,UAAU,EAAEtG,SAAS,CAACuG,cAAc;IACpCC,QAAQ,EAAExG,SAAS,CAACyG;EACxB,CAAC;EACDhD,IAAI,EAAE;IACFiD,SAAS,EAAE,MAAM;IACjBP,YAAY,EAAE;EAClB,CAAC;EACDN,QAAQ,EAAE;IACNS,UAAU,EAAEtG,SAAS,CAACuG,cAAc;IACpCC,QAAQ,EAAExG,SAAS,CAAC2G;EACxB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}