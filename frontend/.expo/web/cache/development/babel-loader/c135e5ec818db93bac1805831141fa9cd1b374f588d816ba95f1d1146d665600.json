{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar windowWidth = Dimensions.get('window').width;\nexport function useSwipe(onSwipeLeft, onSwipeRight) {\n  var rangeOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n  var firstTouch = 0;\n  function onTouchStart(e) {\n    firstTouch = e.nativeEvent.pageX;\n  }\n  function onTouchEnd(e) {\n    var positionX = e.nativeEvent.pageX;\n    var range = windowWidth / rangeOffset;\n    if (positionX - firstTouch > range) {\n      onSwipeRight && onSwipeRight();\n    } else if (firstTouch - positionX > range) {\n      onSwipeLeft && onSwipeLeft();\n    }\n  }\n  return {\n    onTouchStart: onTouchStart,\n    onTouchEnd: onTouchEnd\n  };\n}","map":{"version":3,"names":["windowWidth","Dimensions","get","width","useSwipe","onSwipeLeft","onSwipeRight","rangeOffset","arguments","length","undefined","firstTouch","onTouchStart","e","nativeEvent","pageX","onTouchEnd","positionX","range"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/LearnScreen/hooks/useSwipe.tsx"],"sourcesContent":["import { Dimensions } from 'react-native';\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\nexport function useSwipe(onSwipeLeft?: any, onSwipeRight?: any, rangeOffset = 4) {\r\n    let firstTouch = 0; // set user touch start position\r\n\r\n    function onTouchStart(e: any) {\r\n        firstTouch = e.nativeEvent.pageX;\r\n    }\r\n\r\n    // when touch ends check for swipe directions\r\n    function onTouchEnd(e: any){\r\n        // get touch position and screen size\r\n        const positionX = e.nativeEvent.pageX;\r\n        const range = windowWidth / rangeOffset;\r\n\r\n        // check if position is growing positively and has reached specified range\r\n        if(positionX - firstTouch > range){\r\n            onSwipeRight && onSwipeRight();\r\n        }\r\n        // check if position is growing negatively and has reached specified range\r\n        else if(firstTouch - positionX > range){\r\n            onSwipeLeft && onSwipeLeft();\r\n        }\r\n    }\r\n\r\n    return {onTouchStart, onTouchEnd};\r\n}"],"mappings":";AAEA,IAAMA,WAAW,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;AAElD,OAAO,SAASC,QAAQA,CAACC,WAAiB,EAAEC,YAAkB,EAAmB;EAAA,IAAjBC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAC3E,IAAIG,UAAU,GAAG,CAAC;EAElB,SAASC,YAAYA,CAACC,CAAM,EAAE;IAC1BF,UAAU,GAAGE,CAAC,CAACC,WAAW,CAACC,KAAK;EACpC;EAGA,SAASC,UAAUA,CAACH,CAAM,EAAC;IAEvB,IAAMI,SAAS,GAAGJ,CAAC,CAACC,WAAW,CAACC,KAAK;IACrC,IAAMG,KAAK,GAAGlB,WAAW,GAAGO,WAAW;IAGvC,IAAGU,SAAS,GAAGN,UAAU,GAAGO,KAAK,EAAC;MAC9BZ,YAAY,IAAIA,YAAY,CAAC,CAAC;IAClC,CAAC,MAEI,IAAGK,UAAU,GAAGM,SAAS,GAAGC,KAAK,EAAC;MACnCb,WAAW,IAAIA,WAAW,CAAC,CAAC;IAChC;EACJ;EAEA,OAAO;IAACO,YAAY,EAAZA,YAAY;IAAEI,UAAU,EAAVA;EAAU,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}