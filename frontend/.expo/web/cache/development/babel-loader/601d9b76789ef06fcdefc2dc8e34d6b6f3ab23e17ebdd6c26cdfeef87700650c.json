{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toby Usher\\\\Documents\\\\dev\\\\quivo-app\\\\frontend\\\\screens\\\\FaqScreen\\\\index.tsx\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport * as constants from \"../../constants\";\nimport NavBar from \"../../components/NavBar\";\nimport QACard from \"./components/QACard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FaqScreen(_ref) {\n  var _this = this;\n  var navigation = _ref.navigation;\n  var data = [{\n    question: \"Who is this app for?\",\n    answer: \"This app is intended for beginner to intermediate learners of a foreign language who want to quickly \\\r\n            grow their vocabulary. It was borne out of my own frustrations learning French vocabulary, particularly when my \\\r\n            knowledge of the language wasn't yet sufficient to learn through context. At the time, I wished there was an app \\\r\n            that could just show me lots of examples of sentences that were comprehensible to someone of my level, and where \\\r\n             the sentences would become increasingly more complex as my knowledge increased.\"\n  }, {\n    question: \"How should the app be used?\",\n    answer: \"Simply choose what percentage of already-known words you want in new sentences. Tap a word once to see the english translation and word frequency, and double tap the word to add it to your dictionary.\"\n  }, {\n    question: \"How is the percentage comprehension calculated?\",\n    answer: \"...\"\n  }, {\n    question: \"Where do the sentences used in the app come from?\",\n    answer: \"...\"\n  }, {\n    question: \"What if I already know some words in the language I'm learning? Can I skip ahead?\",\n    answer: \"Yes, if you already have some knowledg of your target language...\"\n  }, {\n    question: \"Why the name Quivo?\",\n    answer: \"Quivo is short for 'quick vocabulary'.\"\n  }];\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(NavBar, {\n      title: \"FAQs\",\n      navigation: navigation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), _jsxDEV(ScrollView, {\n      bounces: false,\n      showsVerticalScrollIndicator: false,\n      showsHorizontalScrollIndicator: false,\n      overScrollMode: \"never\",\n      removeClippedSubviews: true,\n      children: data.map(function (item, idx) {\n        return _jsxDEV(QACard, {\n          item: data[idx]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 42\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 50,\n    marginHorizontal: 20\n  },\n  title: {\n    fontSize: constants.H2FONTSIZE,\n    fontFamily: constants.FONTFAMILYBOLD,\n    backgroundColor: constants.SECONDARYCOLOR,\n    width: \"100%\",\n    textAlign: \"center\",\n    padding: 10\n  }\n});","map":{"version":3,"names":["React","StyleSheet","SafeAreaView","ScrollView","constants","NavBar","QACard","jsxDEV","_jsxDEV","FaqScreen","_ref","_this","navigation","data","question","answer","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","bounces","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","overScrollMode","removeClippedSubviews","map","item","idx","create","marginTop","marginHorizontal","fontSize","H2FONTSIZE","fontFamily","FONTFAMILYBOLD","backgroundColor","SECONDARYCOLOR","width","textAlign","padding"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/FaqScreen/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, SafeAreaView, ScrollView } from \"react-native\";\r\nimport { NativeStackHeaderProps } from \"@react-navigation/native-stack\";\r\nimport * as constants from \"../../constants\";\r\nimport NavBar from \"../../components/NavBar\";\r\nimport QACard from \"./components/QACard\";\r\n\r\nexport default function FaqScreen({navigation}: NativeStackHeaderProps) {\r\n    \r\n    // To be replaced by a JSON response\r\n    const data = [\r\n        {\r\n            question: \"Who is this app for?\",\r\n            answer: \"This app is intended for beginner to intermediate learners of a foreign language who want to quickly \\\r\n            grow their vocabulary. It was borne out of my own frustrations learning French vocabulary, particularly when my \\\r\n            knowledge of the language wasn't yet sufficient to learn through context. At the time, I wished there was an app \\\r\n            that could just show me lots of examples of sentences that were comprehensible to someone of my level, and where \\\r\n             the sentences would become increasingly more complex as my knowledge increased.\"\r\n        },\r\n        {\r\n            question: \"How should the app be used?\",\r\n            answer: \"Simply choose what percentage of already-known words you want in new sentences. Tap a word once to see the english translation and word frequency, and double tap the word to add it to your dictionary.\"\r\n        },\r\n        {\r\n            question: \"How is the percentage comprehension calculated?\",\r\n            answer: \"...\"\r\n        },\r\n        {\r\n            question: \"Where do the sentences used in the app come from?\",\r\n            answer: \"...\"\r\n        },\r\n        {\r\n            question: \"What if I already know some words in the language I'm learning? Can I skip ahead?\",\r\n            answer: \"Yes, if you already have some knowledg of your target language...\"\r\n        },\r\n        {\r\n            question: \"Why the name Quivo?\",\r\n            answer: \"Quivo is short for 'quick vocabulary'.\"\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <NavBar title={\"FAQs\"} navigation={navigation}/>\r\n            <ScrollView\r\n                bounces={false}\r\n                showsVerticalScrollIndicator={false} \r\n                showsHorizontalScrollIndicator={false}\r\n                overScrollMode=\"never\"\r\n                removeClippedSubviews={true}\r\n            >\r\n                {data.map((item, idx) => <QACard item={data[idx]} />)}\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginTop: 50,\r\n        marginHorizontal: 20\r\n    },\r\n    title: {\r\n        fontSize: constants.H2FONTSIZE,\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        backgroundColor: constants.SECONDARYCOLOR,\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n        padding: 10\r\n    }\r\n});"],"mappings":";AAAA,OAAOA,KAAK,MAA+B,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAGnD,OAAO,KAAKC,SAAS,MAAM,iBAAiB;AAC5C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAuC;EAAA,IAAAC,KAAA;EAAA,IAArCC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EAGzC,IAAMC,IAAI,GAAG,CACT;IACIC,QAAQ,EAAE,sBAAsB;IAChCC,MAAM,EAAE;AACpB;AACA;AACA;AACA;EACQ,CAAC,EACD;IACID,QAAQ,EAAE,6BAA6B;IACvCC,MAAM,EAAE;EACZ,CAAC,EACD;IACID,QAAQ,EAAE,iDAAiD;IAC3DC,MAAM,EAAE;EACZ,CAAC,EACD;IACID,QAAQ,EAAE,mDAAmD;IAC7DC,MAAM,EAAE;EACZ,CAAC,EACD;IACID,QAAQ,EAAE,mFAAmF;IAC7FC,MAAM,EAAE;EACZ,CAAC,EACD;IACID,QAAQ,EAAE,qBAAqB;IAC/BC,MAAM,EAAE;EACZ,CAAC,CACJ;EAED,OACIP,OAAA,CAACN,YAAY;IAACc,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAClCX,OAAA,CAACH,MAAM;MAACe,KAAK,EAAE,MAAO;MAACR,UAAU,EAAEA;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAChDhB,OAAA,CAACL,UAAU;MACPsB,OAAO,EAAE,KAAM;MACfC,4BAA4B,EAAE,KAAM;MACpCC,8BAA8B,EAAE,KAAM;MACtCC,cAAc,EAAC,OAAO;MACtBC,qBAAqB,EAAE,IAAK;MAAAV,QAAA,EAE3BN,IAAI,CAACiB,GAAG,CAAC,UAACC,IAAI,EAAEC,GAAG;QAAA,OAAKxB,OAAA,CAACF,MAAM;UAACyB,IAAI,EAAElB,IAAI,CAACmB,GAAG;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAb,KAAE,CAAC;MAAA;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEvB;AAEA,IAAMP,MAAM,GAAGhB,UAAU,CAACgC,MAAM,CAAC;EAC7Bf,SAAS,EAAE;IACPgB,SAAS,EAAE,EAAE;IACbC,gBAAgB,EAAE;EACtB,CAAC;EACDf,KAAK,EAAE;IACHgB,QAAQ,EAAEhC,SAAS,CAACiC,UAAU;IAC9BC,UAAU,EAAElC,SAAS,CAACmC,cAAc;IACpCC,eAAe,EAAEpC,SAAS,CAACqC,cAAc;IACzCC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,QAAQ;IACnBC,OAAO,EAAE;EACb;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}