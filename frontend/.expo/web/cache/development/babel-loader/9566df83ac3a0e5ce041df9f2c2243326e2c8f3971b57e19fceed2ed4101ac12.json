{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Toby Usher\\\\Documents\\\\dev\\\\quivo-app\\\\frontend\\\\components\\\\ToggleButton.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useState } from \"react\";\nimport * as constants from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleButton(_ref) {\n  var initiallySelected = _ref.initiallySelected,\n    size = _ref.size,\n    onValueChange = _ref.onValueChange,\n    primaryColor = _ref.primaryColor,\n    secondaryColor = _ref.secondaryColor;\n  var _useState = useState(initiallySelected),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 1,\n    style: _objectSpread({\n      width: size * 1.8,\n      height: size,\n      borderRadius: 0.5 * size,\n      backgroundColor: selected ? secondaryColor : constants.LIGHTGREY\n    }, styles.toggleButton),\n    onPress: function onPress() {\n      setSelected(!selected);\n      onValueChange();\n    },\n    children: _jsxDEV(View, {\n      style: {\n        width: size,\n        height: size,\n        borderRadius: 0.5 * size,\n        marginLeft: selected ? 'auto' : 0,\n        backgroundColor: primaryColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n;\nvar styles = StyleSheet.create({\n  toggleButton: {},\n  checkContainer: {\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  }\n});","map":{"version":3,"names":["useState","constants","jsxDEV","_jsxDEV","ToggleButton","_ref","initiallySelected","size","onValueChange","primaryColor","secondaryColor","_useState","_useState2","_slicedToArray","selected","setSelected","TouchableOpacity","activeOpacity","style","_objectSpread","width","height","borderRadius","backgroundColor","LIGHTGREY","styles","toggleButton","onPress","children","View","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","StyleSheet","create","checkContainer","marginRight"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/components/ToggleButton.tsx"],"sourcesContent":["import { View, TouchableOpacity, StyleSheet } from \"react-native\"\r\nimport { useState } from \"react\";\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport * as constants from \"../constants\";\r\n\r\ninterface IToggleButtonProps {\r\n    initiallySelected: boolean;\r\n    size: number,\r\n    onValueChange: Function,\r\n    primaryColor: string,\r\n    secondaryColor: string\r\n}\r\n\r\n// Mettre dans components\r\nexport default function ToggleButton ({ initiallySelected, size, onValueChange, primaryColor, secondaryColor }: IToggleButtonProps) {\r\n\r\n    const [selected, setSelected] = useState(initiallySelected);\r\n    \r\n    return (\r\n        <TouchableOpacity\r\n            activeOpacity={1}\r\n            style={{\r\n                width: size * 1.8,\r\n                height: size,\r\n                borderRadius: 0.5 * size,\r\n                backgroundColor: selected ? secondaryColor : constants.LIGHTGREY,\r\n                ...styles.toggleButton\r\n            }}\r\n            onPress={() => {\r\n                setSelected(!selected);\r\n                onValueChange();\r\n            }}>\r\n            <View style={{\r\n                width: size,\r\n                height: size,\r\n                borderRadius: 0.5 * size,\r\n                marginLeft: selected ? 'auto' : 0,\r\n                backgroundColor: primaryColor\r\n                }}>\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    toggleButton: {\r\n    },\r\n    checkContainer: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    }\r\n});"],"mappings":";;;;;;;;AACA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,KAAKC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1C,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAAgG;EAAA,IAA5FC,iBAAiB,GAAAD,IAAA,CAAjBC,iBAAiB;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEC,aAAa,GAAAH,IAAA,CAAbG,aAAa;IAAEC,YAAY,GAAAJ,IAAA,CAAZI,YAAY;IAAEC,cAAc,GAAAL,IAAA,CAAdK,cAAc;EAExG,IAAAC,SAAA,GAAgCX,QAAQ,CAACM,iBAAiB,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,OACIT,OAAA,CAACa,gBAAgB;IACbC,aAAa,EAAE,CAAE;IACjBC,KAAK,EAAAC,aAAA;MACDC,KAAK,EAAEb,IAAI,GAAG,GAAG;MACjBc,MAAM,EAAEd,IAAI;MACZe,YAAY,EAAE,GAAG,GAAGf,IAAI;MACxBgB,eAAe,EAAET,QAAQ,GAAGJ,cAAc,GAAGT,SAAS,CAACuB;IAAS,GAC7DC,MAAM,CAACC,YAAY,CACxB;IACFC,OAAO,EAAE,SAAAA,QAAA,EAAM;MACXZ,WAAW,CAAC,CAACD,QAAQ,CAAC;MACtBN,aAAa,CAAC,CAAC;IACnB,CAAE;IAAAoB,QAAA,EACFzB,OAAA,CAAC0B,IAAI;MAACX,KAAK,EAAE;QACTE,KAAK,EAAEb,IAAI;QACXc,MAAM,EAAEd,IAAI;QACZe,YAAY,EAAE,GAAG,GAAGf,IAAI;QACxBuB,UAAU,EAAEhB,QAAQ,GAAG,MAAM,GAAG,CAAC;QACjCS,eAAe,EAAEd;MACjB;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE3B;AAAC;AAED,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC7BV,YAAY,EAAE,CACd,CAAC;EACDW,cAAc,EAAE;IACZP,UAAU,EAAE,MAAM;IAClBQ,WAAW,EAAE;EACjB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}