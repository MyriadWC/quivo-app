{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useRef } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport default function useFilterPopupVisible() {\n  var windowHeight = Dimensions.get('window').height;\n  var filterPopupAnimation = useRef(new Animated.Value(windowHeight)).current;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    filterPopupVisible = _useState2[0],\n    setFilterPopupVisible = _useState2[1];\n  var toggleFilterPopup = function toggleFilterPopup() {\n    setFilterPopupVisible(!filterPopupVisible);\n    Animated.timing(filterPopupAnimation, {\n      toValue: filterPopupVisible ? windowHeight : 0.2 * windowHeight,\n      duration: 400,\n      useNativeDriver: false\n    }).start();\n  };\n  return {\n    filterPopupVisible: filterPopupVisible,\n    filterPopupAnimation: filterPopupAnimation,\n    toggleFilterPopup: toggleFilterPopup\n  };\n}","map":{"version":3,"names":["useState","useRef","Animated","Dimensions","useFilterPopupVisible","windowHeight","get","height","filterPopupAnimation","Value","current","_useState","_useState2","_slicedToArray","filterPopupVisible","setFilterPopupVisible","toggleFilterPopup","timing","toValue","duration","useNativeDriver","start"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/LearnScreen/hooks/useFilterPopupVisible.ts"],"sourcesContent":["import { useState, useRef } from \"react\";\r\nimport { Animated, Dimensions } from \"react-native\";\r\n\r\nexport default function useFilterPopupVisible(){\r\n\r\n    const windowHeight = Dimensions.get('window').height;\r\n\r\n    const filterPopupAnimation = useRef(new Animated.Value(windowHeight)).current;\r\n\r\n    const [filterPopupVisible, setFilterPopupVisible] = useState(false);\r\n\r\n    const toggleFilterPopup = () => {\r\n        setFilterPopupVisible(!filterPopupVisible);\r\n        Animated.timing(filterPopupAnimation, {\r\n        toValue: filterPopupVisible ? windowHeight : 0.2 * windowHeight,\r\n        duration: 400,\r\n        useNativeDriver: false,\r\n        }).start();\r\n    };\r\n\r\n    return { filterPopupVisible, filterPopupAnimation, toggleFilterPopup };\r\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAGzC,eAAe,SAASC,qBAAqBA,CAAA,EAAE;EAE3C,IAAMC,YAAY,GAAGF,UAAU,CAACG,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;EAEpD,IAAMC,oBAAoB,GAAGP,MAAM,CAAC,IAAIC,QAAQ,CAACO,KAAK,CAACJ,YAAY,CAAC,CAAC,CAACK,OAAO;EAE7E,IAAAC,SAAA,GAAoDX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5DG,kBAAkB,GAAAF,UAAA;IAAEG,qBAAqB,GAAAH,UAAA;EAEhD,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC5BD,qBAAqB,CAAC,CAACD,kBAAkB,CAAC;IAC1CZ,QAAQ,CAACe,MAAM,CAACT,oBAAoB,EAAE;MACtCU,OAAO,EAAEJ,kBAAkB,GAAGT,YAAY,GAAG,GAAG,GAAGA,YAAY;MAC/Dc,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACjB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACd,CAAC;EAED,OAAO;IAAEP,kBAAkB,EAAlBA,kBAAkB;IAAEN,oBAAoB,EAApBA,oBAAoB;IAAEQ,iBAAiB,EAAjBA;EAAkB,CAAC;AAC1E"},"metadata":{},"sourceType":"module","externalDependencies":[]}