{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useEffect, useState, useContext } from \"react\";\nimport client from \"../../../utils/axios\";\nimport UserContext from \"../../../contexts/UserContext\";\nexport default function useFetchItems(sentencesData) {\n  var _useContext = useContext(UserContext),\n    currentLanguageCode = _useContext.currentLanguageCode,\n    knownWordsPercentage = _useContext.knownWordsPercentage;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    items = _useState2[0],\n    setItems = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentItem = _useState4[0],\n    setCurrentItem = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    itemIndex = _useState6[0],\n    setItemIndex = _useState6[1];\n  var _useState7 = useState(sentencesData !== null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isStoryMode = _useState8[0],\n    _ = _useState8[1];\n  useEffect(function () {\n    if (!isStoryMode) {\n      fetchData();\n    } else {\n      setItemIndex(0);\n      setCurrentItem(sentencesData[0]);\n      setItems(sentencesData);\n    }\n  }, [currentLanguageCode, knownWordsPercentage]);\n  var fetchData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      client.get(\"/api/sentences/\" + knownWordsPercentage, {\n        withCredentials: true\n      }).then(function (res) {\n        var data = res.data.map(function (item) {\n          if (typeof item.words === 'string') {\n            item = _objectSpread(_objectSpread({}, item), {}, {\n              words: JSON.parse(item.words)\n            });\n          }\n          return item;\n        });\n        setItemIndex(0);\n        setCurrentItem(data[0]);\n        setItems(data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var changeItem = function changeItem(increment) {\n    if (!isStoryMode && increment == -1) return;\n    var endIndex = items.length - 1;\n    var isEdgeSentence = 0 <= itemIndex <= endIndex;\n    if (isEdgeSentence) {\n      var stepOutOfRange = itemIndex <= 0 && increment == -1 || itemIndex >= endIndex && increment == 1;\n      if (stepOutOfRange) {\n        if (isStoryMode) {\n          console.log('Leaving the range');\n        } else {\n          fetchData();\n        }\n        return;\n      }\n    }\n    setItemIndex(function (prevIndex) {\n      return prevIndex + increment;\n    });\n    var newItem = items[itemIndex + increment];\n    setCurrentItem(newItem);\n  };\n  return {\n    currentItem: currentItem,\n    changeItem: changeItem\n  };\n}","map":{"version":3,"names":["useEffect","useState","useContext","client","UserContext","useFetchItems","sentencesData","_useContext","currentLanguageCode","knownWordsPercentage","_useState","_useState2","_slicedToArray","items","setItems","_useState3","_useState4","currentItem","setCurrentItem","_useState5","_useState6","itemIndex","setItemIndex","_useState7","_useState8","isStoryMode","_","fetchData","_ref","_asyncToGenerator","get","withCredentials","then","res","data","map","item","words","_objectSpread","JSON","parse","catch","error","console","log","apply","arguments","changeItem","increment","endIndex","length","isEdgeSentence","stepOutOfRange","prevIndex","newItem"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/components/SentenceReaderPanel/hooks/useFetchItems.ts"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\n// Utils\r\nimport client from \"../../../utils/axios\";\r\n// Contexts\r\nimport UserContext from \"../../../contexts/UserContext\";\r\n// Interfaces\r\nimport { ISentence } from \"../../../interfaces\";\r\n\r\nexport default function useFetchItems(sentencesData?: ISentence[] | null){\r\n    // If no sentencesData provided, then fetch sentences from the server\r\n\r\n    const { currentLanguageCode, knownWordsPercentage } = useContext(UserContext);\r\n    \r\n    const [items, setItems] = useState<ISentence|null>(null);\r\n\r\n    //const [currentItem, setCurrentItem] = useState(items[0]);\r\n    const [currentItem, setCurrentItem] = useState(null);\r\n    const [itemIndex, setItemIndex] = useState<number>(0);\r\n    const [isStoryMode, _] = useState<boolean>(sentencesData !== null);\r\n\r\n    useEffect(() => {\r\n        // If sentencesData not provided to component, then fetch\r\n        // sentences from the database\r\n        if (!isStoryMode) {\r\n            fetchData();\r\n        } else {\r\n            setItemIndex(0);\r\n            setCurrentItem(sentencesData[0]);\r\n            setItems(sentencesData);  \r\n        }\r\n    }, [currentLanguageCode, knownWordsPercentage])\r\n\r\n    const fetchData = async() => {\r\n        client.get(\"/api/sentences/\" + knownWordsPercentage, { withCredentials: true })\r\n        .then(function(res) {\r\n            // Make sure each item's word field in converted from stringified\r\n            // json to real object   \r\n            const data = res.data.map(item => {\r\n\r\n                // Convert from postgresql array format\r\n                if (typeof item.words === 'string') {\r\n                    item = { ...item, words: JSON.parse(item.words) };\r\n                }\r\n                return item;\r\n            })\r\n            setItemIndex(0);\r\n            setCurrentItem(data[0]);\r\n            setItems(data);\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    const changeItem = (increment: 1|-1) => {\r\n\r\n        // Can only decrement in storyMode\r\n        if (!isStoryMode && increment == -1) return;\r\n\r\n        const endIndex = items.length - 1;  \r\n        const isEdgeSentence = (0 <= itemIndex <= endIndex);\r\n        \r\n        if (isEdgeSentence) {\r\n\r\n            const stepOutOfRange = (\r\n                itemIndex <= 0 && increment == -1\r\n                || itemIndex >= endIndex && increment == 1\r\n            );\r\n\r\n            // increment takes us out of the allowed range\r\n            if (stepOutOfRange) {\r\n                if (isStoryMode) {\r\n                    console.log('Leaving the range');\r\n                } else {\r\n                    // Need to load more data if not story\r\n                    fetchData();\r\n                }\r\n            return;\r\n            }\r\n        }\r\n\r\n        setItemIndex(prevIndex => prevIndex + increment);\r\n        let newItem = items[itemIndex + increment];\r\n        setCurrentItem(newItem);\r\n\r\n    };\r\n\r\n    return { currentItem, changeItem }; \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}