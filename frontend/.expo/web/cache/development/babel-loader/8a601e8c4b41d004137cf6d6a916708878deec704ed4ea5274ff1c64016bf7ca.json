{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Toby Usher\\\\Documents\\\\dev\\\\quivo-app\\\\frontend\\\\screens\\\\WordListScreen\\\\components\\\\ProgressBarButton.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useEffect, useState } from \"react\";\nimport * as constants from \"../../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProgressBarButton(_ref) {\n  var id = _ref.id,\n    primaryColor = _ref.primaryColor,\n    label = _ref.label,\n    currentValue = _ref.currentValue,\n    isActive = _ref.isActive,\n    onPress = _ref.onPress,\n    maxValue = _ref.maxValue;\n  var progressPercentage = Math.floor(currentValue / maxValue * 100);\n  var _useState = useState(isActive ? primaryColor : constants.TERTIARYCOLOR),\n    _useState2 = _slicedToArray(_useState, 2),\n    borderColor = _useState2[0],\n    setBorderColor = _useState2[1];\n  useEffect(function () {\n    setBorderColor(isActive ? primaryColor : primaryColor + '55');\n  }, [isActive]);\n  var handlePress = function handlePress() {\n    onPress(id);\n  };\n  return _jsxDEV(TouchableOpacity, {\n    activeOpacity: 1,\n    style: _objectSpread({\n      borderColor: borderColor,\n      backgroundColor: primaryColor + '33'\n    }, styles.progressBarButton),\n    onPress: handlePress,\n    children: [_jsxDEV(View, {\n      style: _objectSpread({\n        width: progressPercentage + '%',\n        backgroundColor: primaryColor\n      }, styles.progressBar)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.progressBarButtonTextContainer,\n      children: _jsxDEV(Text, {\n        style: styles.progressBarButtonText,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: _objectSpread({\n        backgroundColor: constants.TERTIARYCOLOR\n      }, styles.progressBarButtonNumberContainer),\n      children: _jsxDEV(Text, {\n        style: styles.progressBarButtonNumberText,\n        children: currentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n;\nvar styles = StyleSheet.create({\n  progressBarButton: {\n    flexDirection: \"row\",\n    borderWidth: 3,\n    borderRadius: 10,\n    overflow: 'hidden',\n    verticalAlign: 'center',\n    marginRight: 5,\n    paddingHorizontal: 5,\n    marginBottom: 15,\n    height: 40\n  },\n  progressBarButtonTextContainer: {\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    marginRight: 10\n  },\n  progressBarButtonText: {\n    fontSize: constants.H2FONTSIZE,\n    fontFamily: constants.FONTFAMILYBOLD,\n    color: constants.BLACK\n  },\n  progressBarButtonNumberContainer: {\n    paddingHorizontal: 5,\n    borderRadius: 5,\n    marginTop: 'auto',\n    marginBottom: 'auto'\n  },\n  progressBarButtonNumberText: {\n    fontSize: constants.H2FONTSIZE,\n    fontFamily: constants.FONTFAMILYBOLD,\n    color: constants.BLACK\n  },\n  progressBar: {\n    position: 'absolute',\n    height: 40,\n    borderColor: constants.PRIMARYCOLOR\n  }\n});","map":{"version":3,"names":["useEffect","useState","constants","jsxDEV","_jsxDEV","ProgressBarButton","_ref","id","primaryColor","label","currentValue","isActive","onPress","maxValue","progressPercentage","Math","floor","_useState","TERTIARYCOLOR","_useState2","_slicedToArray","borderColor","setBorderColor","handlePress","TouchableOpacity","activeOpacity","style","_objectSpread","backgroundColor","styles","progressBarButton","children","View","width","progressBar","fileName","_jsxFileName","lineNumber","columnNumber","progressBarButtonTextContainer","Text","progressBarButtonText","progressBarButtonNumberContainer","progressBarButtonNumberText","StyleSheet","create","flexDirection","borderWidth","borderRadius","overflow","verticalAlign","marginRight","paddingHorizontal","marginBottom","height","marginTop","fontSize","H2FONTSIZE","fontFamily","FONTFAMILYBOLD","color","BLACK","position","PRIMARYCOLOR"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/WordListScreen/components/ProgressBarButton.tsx"],"sourcesContent":["import {\r\n    StyleSheet,\r\n    View,\r\n    Text,\r\n    TouchableOpacity,\r\n} from \"react-native\";\r\nimport { useEffect, useState} from \"react\";\r\nimport * as constants from \"../../../constants\";\r\n\r\ninterface IProgressBarButton {\r\n    id: string,\r\n    primaryColor: string,\r\n    label: string,\r\n    currentValue: number,\r\n    isActive: boolean,\r\n    onPress: Function,\r\n    maxValue: number\r\n}\r\n\r\nexport default function ProgressBarButton({id, primaryColor, label, currentValue, isActive, onPress, maxValue}: IProgressBarButton){\r\n\r\n    const progressPercentage = Math.floor((currentValue / maxValue) * 100);\r\n\r\n    const [borderColor, setBorderColor] = useState(isActive ? primaryColor: constants.TERTIARYCOLOR);\r\n    \r\n    useEffect(() => {\r\n        setBorderColor(isActive ? primaryColor: primaryColor + '55');\r\n    }, [isActive]);\r\n\r\n    const handlePress = () => {\r\n        // Trigger the function in the LanguageItem component's onPress\r\n        onPress(id);\r\n    };\r\n    \r\n    return (\r\n        <TouchableOpacity\r\n            activeOpacity={1}\r\n            style={{\r\n                borderColor: borderColor,\r\n                backgroundColor: primaryColor + '33',\r\n                ...styles.progressBarButton,\r\n            }}\r\n            onPress={handlePress}\r\n            >\r\n            <View style={{\r\n                width: progressPercentage + '%',\r\n                backgroundColor: primaryColor,\r\n                ...styles.progressBar}}></View>\r\n            <View style={styles.progressBarButtonTextContainer}>\r\n                <Text style={styles.progressBarButtonText}>{label}</Text>\r\n            </View>\r\n            <View style={{\r\n                backgroundColor: constants.TERTIARYCOLOR,\r\n                ...styles.progressBarButtonNumberContainer\r\n                }}>\r\n                <Text style={styles.progressBarButtonNumberText}>{currentValue}</Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    progressBarButton: {\r\n        //Color: constants.LIGHTGREY,\r\n        flexDirection: \"row\",\r\n        borderWidth: 3,\r\n        borderRadius: 10,\r\n        overflow: 'hidden',\r\n        verticalAlign: 'center',\r\n        marginRight: 5,\r\n        paddingHorizontal: 5,\r\n        marginBottom: 15,\r\n        height: 40\r\n    },\r\n    progressBarButtonTextContainer: {\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto',\r\n        marginRight: 10\r\n    },\r\n    progressBarButtonText: {\r\n        fontSize: constants.H2FONTSIZE,\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        color: constants.BLACK\r\n    },\r\n    progressBarButtonNumberContainer: {\r\n        //backgroundColor: constants.GREEN,\r\n        paddingHorizontal: 5,\r\n        borderRadius: 5,\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto'\r\n    },\r\n    progressBarButtonNumberText: {\r\n        fontSize: constants.H2FONTSIZE,\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        color: constants.BLACK,\r\n    },\r\n    progressBar: {\r\n        position: 'absolute',\r\n        height: 40,\r\n        //backgroundColor: constants.PRIMARYCOLOR,\r\n        borderColor: constants.PRIMARYCOLOR\r\n    }\r\n});"],"mappings":";;;;;;;;;AAMA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC1C,OAAO,KAAKC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYhD,eAAe,SAASC,iBAAiBA,CAAAC,IAAA,EAA0F;EAAA,IAAxFC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IAAEC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,YAAY,GAAAJ,IAAA,CAAZI,YAAY;IAAEC,QAAQ,GAAAL,IAAA,CAARK,QAAQ;IAAEC,OAAO,GAAAN,IAAA,CAAPM,OAAO;IAAEC,QAAQ,GAAAP,IAAA,CAARO,QAAQ;EAEzG,IAAMC,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAAEN,YAAY,GAAGG,QAAQ,GAAI,GAAG,CAAC;EAEtE,IAAAI,SAAA,GAAsChB,QAAQ,CAACU,QAAQ,GAAGH,YAAY,GAAEN,SAAS,CAACgB,aAAa,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAzFI,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElCnB,SAAS,CAAC,YAAM;IACZsB,cAAc,CAACX,QAAQ,GAAGH,YAAY,GAAEA,YAAY,GAAG,IAAI,CAAC;EAChE,CAAC,EAAE,CAACG,QAAQ,CAAC,CAAC;EAEd,IAAMY,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAEtBX,OAAO,CAACL,EAAE,CAAC;EACf,CAAC;EAED,OACIH,OAAA,CAACoB,gBAAgB;IACbC,aAAa,EAAE,CAAE;IACjBC,KAAK,EAAAC,aAAA;MACDN,WAAW,EAAEA,WAAW;MACxBO,eAAe,EAAEpB,YAAY,GAAG;IAAI,GACjCqB,MAAM,CAACC,iBAAiB,CAC7B;IACFlB,OAAO,EAAEW,WAAY;IAAAQ,QAAA,GAErB3B,OAAA,CAAC4B,IAAI;MAACN,KAAK,EAAAC,aAAA;QACPM,KAAK,EAAEnB,kBAAkB,GAAG,GAAG;QAC/Bc,eAAe,EAAEpB;MAAY,GAC1BqB,MAAM,CAACK,WAAW;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACnClC,OAAA,CAAC4B,IAAI;MAACN,KAAK,EAAEG,MAAM,CAACU,8BAA+B;MAAAR,QAAA,EAC/C3B,OAAA,CAACoC,IAAI;QAACd,KAAK,EAAEG,MAAM,CAACY,qBAAsB;QAAAV,QAAA,EAAEtB;MAAK;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,EACPlC,OAAA,CAAC4B,IAAI;MAACN,KAAK,EAAAC,aAAA;QACPC,eAAe,EAAE1B,SAAS,CAACgB;MAAa,GACrCW,MAAM,CAACa,gCAAgC,CACxC;MAAAX,QAAA,EACF3B,OAAA,CAACoC,IAAI;QAACd,KAAK,EAAEG,MAAM,CAACc,2BAA4B;QAAAZ,QAAA,EAAErB;MAAY;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE3B;AAAC;AAED,IAAMT,MAAM,GAAGe,UAAU,CAACC,MAAM,CAAC;EAC7Bf,iBAAiB,EAAE;IAEfgB,aAAa,EAAE,KAAK;IACpBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,QAAQ;IAClBC,aAAa,EAAE,QAAQ;IACvBC,WAAW,EAAE,CAAC;IACdC,iBAAiB,EAAE,CAAC;IACpBC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE;EACZ,CAAC;EACDf,8BAA8B,EAAE;IAC5BgB,SAAS,EAAE,MAAM;IACjBF,YAAY,EAAE,MAAM;IACpBF,WAAW,EAAE;EACjB,CAAC;EACDV,qBAAqB,EAAE;IACnBe,QAAQ,EAAEtD,SAAS,CAACuD,UAAU;IAC9BC,UAAU,EAAExD,SAAS,CAACyD,cAAc;IACpCC,KAAK,EAAE1D,SAAS,CAAC2D;EACrB,CAAC;EACDnB,gCAAgC,EAAE;IAE9BU,iBAAiB,EAAE,CAAC;IACpBJ,YAAY,EAAE,CAAC;IACfO,SAAS,EAAE,MAAM;IACjBF,YAAY,EAAE;EAClB,CAAC;EACDV,2BAA2B,EAAE;IACzBa,QAAQ,EAAEtD,SAAS,CAACuD,UAAU;IAC9BC,UAAU,EAAExD,SAAS,CAACyD,cAAc;IACpCC,KAAK,EAAE1D,SAAS,CAAC2D;EACrB,CAAC;EACD3B,WAAW,EAAE;IACT4B,QAAQ,EAAE,UAAU;IACpBR,MAAM,EAAE,EAAE;IAEVjC,WAAW,EAAEnB,SAAS,CAAC6D;EAC3B;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}