{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Toby Usher\\\\Documents\\\\dev\\\\quivo-app\\\\frontend\\\\screens\\\\AvatarScreen\\\\index.tsx\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useContext } from \"react\";\nimport { avatarImageMap, avatarLevelUnlock, avatarLevelColors } from '../../assets/avatars/avatarMaps';\nimport { calcLevel } from \"../../utils/functions\";\nimport client from \"../../utils/axios\";\nimport * as constants from '../../constants';\nimport UserContext from '../../contexts/UserContext';\nimport NavBar from \"../../components/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AvatarBox = function AvatarBox(_ref) {\n  var userId = _ref.userId,\n    id = _ref.id,\n    source = _ref.source,\n    color = _ref.color,\n    isUnlocked = _ref.isUnlocked,\n    isActive = _ref.isActive,\n    setUserAvatarId = _ref.setUserAvatarId;\n  var handlePress = function handlePress() {\n    if (!isActive) {\n      client.post('./api/users/changeavatar/', {\n        user_id: userId,\n        avatar_id: id\n      }).then(function (res) {\n        setUserAvatarId(id);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  };\n  return _jsxDEV(TouchableOpacity, {\n    style: styles.avatarContainer,\n    activeOpacity: 1,\n    disabled: !isUnlocked,\n    onPress: function onPress() {\n      return handlePress();\n    },\n    children: [_jsxDEV(View, {\n      style: _objectSpread({\n        backgroundColor: isActive ? constants.ORANGE : color\n      }, styles.avatarContainerShadow)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, _this), _jsxDEV(View, {\n      style: _objectSpread({\n        borderColor: isActive ? constants.ORANGE : color\n      }, styles.avatarImageContainer),\n      children: _jsxDEV(Image, {\n        style: _objectSpread({\n          opacity: isUnlocked ? 1 : 0.3\n        }, styles.avatarImage),\n        source: source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this);\n};\nexport default function AvatarScreen(_ref2) {\n  var _this2 = this;\n  var navigation = _ref2.navigation;\n  var _useContext = useContext(UserContext),\n    currentUser = _useContext.currentUser,\n    knownWords = _useContext.knownWords,\n    userAvatarId = _useContext.userAvatarId,\n    setUserAvatarId = _useContext.setUserAvatarId;\n  var maxWordNum = Object.values(currentUser.known_words_count).reduce(function (a, b) {\n    return Math.max(a, b);\n  });\n  maxWordNum = maxWordNum <= knownWords ? knownWords : maxWordNum;\n  var level = calcLevel(maxWordNum, 30000).level;\n  var renderSubsection = function renderSubsection(level, avatarIds, userLevel) {\n    var isUnlocked = userLevel >= level;\n    var color = isUnlocked ? avatarLevelColors[level] : constants.GREY;\n    return _jsxDEV(View, {\n      style: _objectSpread({\n        borderColor: color\n      }, styles.subsectionContainer),\n      children: [_jsxDEV(View, {\n        style: _objectSpread({\n          backgroundColor: color\n        }, styles.subsectionTitleContainer),\n        children: _jsxDEV(Text, {\n          style: styles.subsectionTitleText,\n          children: [\"Level \", level, \"+\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, _this2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, _this2), _jsxDEV(View, {\n        style: styles.subsectionAvatarsContainer,\n        children: avatarIds.map(function (avatar_id) {\n          return _jsxDEV(AvatarBox, {\n            userId: currentUser.user_id,\n            id: avatar_id,\n            source: avatarImageMap[avatar_id],\n            color: color,\n            isUnlocked: isUnlocked,\n            isActive: avatar_id === userAvatarId,\n            setUserAvatarId: setUserAvatarId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, _this2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, _this2);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(NavBar, {\n      title: \"Choose an Avatar\",\n      navigation: navigation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), _jsxDEV(ScrollView, {\n      style: styles.subsectionsContainer,\n      bounces: false,\n      showsVerticalScrollIndicator: false,\n      showsHorizontalScrollIndicator: false,\n      overScrollMode: \"never\",\n      removeClippedSubviews: true,\n      children: Object.entries(avatarLevelUnlock).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          key = _ref4[0],\n          value = _ref4[1];\n        return renderSubsection(key, value, level);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    marginHorizontal: 0,\n    marginTop: 50,\n    flex: 1\n  },\n  subsectionsContainer: {\n    flexDirection: 'column'\n  },\n  avatarContainer: {\n    marginHorizontal: 5,\n    marginBottom: 20,\n    backgroundColor: constants.TERTIARYCOLOR\n  },\n  avatarContainerShadow: {\n    width: 100,\n    height: 30,\n    marginTop: 75,\n    borderRadius: 10\n  },\n  avatarImageContainer: {\n    width: 100,\n    height: 100,\n    borderWidth: 3,\n    borderRadius: 10,\n    marginTop: -105,\n    backgroundColor: constants.TERTIARYCOLOR\n  },\n  avatarImage: {\n    width: 80,\n    height: 80,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: 'auto',\n    marginBottom: 'auto'\n  },\n  subsectionContainer: {\n    flexDirection: 'column',\n    borderWidth: 3,\n    width: '100%',\n    marginBottom: 10,\n    borderRadius: 10,\n    overflow: 'hidden'\n  },\n  subsectionTitleContainer: {\n    marginBottom: 10,\n    padding: 10\n  },\n  subsectionTitleText: {\n    fontFamily: constants.FONTFAMILYBOLD,\n    fontSize: constants.H2FONTSIZE,\n    color: constants.TERTIARYCOLOR,\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  subsectionAvatarsContainer: {\n    flexDirection: 'row',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  }\n});","map":{"version":3,"names":["useContext","avatarImageMap","avatarLevelUnlock","avatarLevelColors","calcLevel","client","constants","UserContext","NavBar","jsxDEV","_jsxDEV","AvatarBox","_ref","userId","id","source","color","isUnlocked","isActive","setUserAvatarId","handlePress","post","user_id","avatar_id","then","res","catch","err","console","log","TouchableOpacity","style","styles","avatarContainer","activeOpacity","disabled","onPress","children","View","_objectSpread","backgroundColor","ORANGE","avatarContainerShadow","fileName","_jsxFileName","lineNumber","columnNumber","_this","borderColor","avatarImageContainer","Image","opacity","avatarImage","AvatarScreen","_ref2","_this2","navigation","_useContext","currentUser","knownWords","userAvatarId","maxWordNum","Object","values","known_words_count","reduce","a","b","Math","max","level","renderSubsection","avatarIds","userLevel","GREY","subsectionContainer","subsectionTitleContainer","Text","subsectionTitleText","subsectionAvatarsContainer","map","SafeAreaView","container","title","ScrollView","subsectionsContainer","bounces","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","overScrollMode","removeClippedSubviews","entries","_ref3","_ref4","_slicedToArray","key","value","StyleSheet","create","padding","marginHorizontal","marginTop","flex","flexDirection","marginBottom","TERTIARYCOLOR","width","height","borderRadius","borderWidth","marginLeft","marginRight","overflow","fontFamily","FONTFAMILYBOLD","fontSize","H2FONTSIZE"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/AvatarScreen/index.tsx"],"sourcesContent":["import { View, ScrollView, SafeAreaView, Text, TouchableOpacity, StyleSheet, Image } from \"react-native\";\r\nimport { NativeStackHeaderProps } from \"@react-navigation/native-stack\";\r\nimport { useContext } from \"react\";\r\nimport PNG from 'pngjs';\r\n// Utils\r\nimport { avatarImageMap, avatarLevelUnlock, avatarLevelColors } from '../../assets/avatars/avatarMaps';\r\nimport { calcLevel } from \"../../utils/functions\";\r\nimport client from \"../../utils/axios\";\r\n// Constants\r\nimport * as constants from '../../constants';\r\n// Contexts\r\nimport UserContext from '../../contexts/UserContext';\r\n// Components\r\nimport NavBar from \"../../components/NavBar\";\r\n\r\ninterface IAvatarBoxProps {\r\n    userId: number,\r\n    id: number,\r\n    source: any,\r\n    color: string,\r\n    isUnlocked: boolean,\r\n    isActive: boolean,\r\n    setUserAvatarId: Function\r\n}\r\n\r\nconst AvatarBox = ({userId, id, source, color, isUnlocked, isActive, setUserAvatarId}: IAvatarBoxProps) => {\r\n    \r\n    const handlePress = () => {\r\n        if (!isActive) {\r\n            client.post('./api/users/changeavatar/', {\r\n                user_id: userId,\r\n                avatar_id: id\r\n            }).then((res) => {\r\n                // Once changed in the database, update the local\r\n                // hook to reflect this change\r\n                setUserAvatarId(id);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <TouchableOpacity\r\n            style={styles.avatarContainer}\r\n            activeOpacity={1}\r\n            disabled={!isUnlocked}\r\n            onPress={() => handlePress()}\r\n            >\r\n            <View style={{\r\n                backgroundColor: isActive // Comparing int to string here\r\n                    ? constants.ORANGE\r\n                    : color,\r\n                ...styles.avatarContainerShadow\r\n                }}></View>\r\n            <View style={{\r\n                borderColor: isActive\r\n                    ? constants.ORANGE\r\n                    : color,\r\n                ...styles.avatarImageContainer\r\n                }}>\r\n                <Image\r\n                    style={{\r\n                        opacity: isUnlocked ? 1 : 0.3,\r\n                        ...styles.avatarImage\r\n                    }}\r\n                    source={source}\r\n                />\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nexport default function AvatarScreen({navigation}: NativeStackHeaderProps) {\r\n\r\n    const { currentUser, knownWords, userAvatarId, setUserAvatarId } = useContext(UserContext);\r\n\r\n    // If the current language is the one the user knows the most words in, use knownWords to calculate\r\n    // the level, otherwise take the word count of the user's most advanced language.\r\n    // Get the language that the user knows the most words in to calculate the level\r\n    let maxWordNum: number = Object.values(currentUser.known_words_count).reduce((a, b) => Math.max(a, b));\r\n    maxWordNum = (maxWordNum <= knownWords) ? knownWords : maxWordNum;\r\n    const level = calcLevel(maxWordNum, 30000).level;\r\n    \r\n    const renderSubsection = (\r\n        level: (0|5|10|15|20|25|30|35|40|45|50), // TODO: Get this from avatarMap keys\r\n        avatarIds: number[],\r\n        userLevel: number\r\n    ) => {\r\n\r\n        const isUnlocked = userLevel >= level;\r\n        const color = isUnlocked ? avatarLevelColors[level] : constants.GREY;\r\n\r\n        return (\r\n            <View\r\n                style={{\r\n                    borderColor: color,\r\n                    ...styles.subsectionContainer\r\n                }}\r\n                >\r\n                <View style={{\r\n                    backgroundColor: color,\r\n                    ...styles.subsectionTitleContainer\r\n                    }}>\r\n                    <Text style={styles.subsectionTitleText}>Level {level}+</Text>\r\n                    </View>\r\n                <View style={styles.subsectionAvatarsContainer}>\r\n                    {avatarIds.map((avatar_id: number) => (\r\n                        <AvatarBox\r\n                            userId={currentUser.user_id}\r\n                            id={avatar_id}\r\n                            source={avatarImageMap[avatar_id]}\r\n                            color={color}\r\n                            isUnlocked={isUnlocked}\r\n                            isActive={avatar_id === userAvatarId}\r\n                            setUserAvatarId={setUserAvatarId}\r\n                        />\r\n                    ))}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    return (\r\n    <SafeAreaView style={styles.container}>\r\n        <NavBar title='Choose an Avatar' navigation={navigation} />\r\n        <ScrollView\r\n            style={styles.subsectionsContainer}\r\n            bounces={false}\r\n            showsVerticalScrollIndicator={false} \r\n            showsHorizontalScrollIndicator={false}\r\n            overScrollMode=\"never\"\r\n            removeClippedSubviews={true}\r\n        >\r\n            {Object.entries(avatarLevelUnlock).map(([key, value]) => renderSubsection(key, value, level))}\r\n        </ScrollView>\r\n    </SafeAreaView>\r\n    );\r\n }\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 10,\r\n        marginHorizontal: 0,\r\n        marginTop: 50,\r\n        flex: 1,\r\n    },\r\n    subsectionsContainer: {\r\n        flexDirection: 'column',\r\n    },\r\n    avatarContainer: {\r\n        marginHorizontal: 5,\r\n        marginBottom: 20,\r\n        backgroundColor: constants.TERTIARYCOLOR\r\n    },\r\n    avatarContainerShadow: {\r\n        width: 100,\r\n        height: 30,\r\n        marginTop: 75,\r\n        borderRadius: 10\r\n    },\r\n    avatarImageContainer: {\r\n        width: 100,\r\n        height: 100,\r\n        borderWidth: 3,\r\n        borderRadius: 10,\r\n        marginTop: -105,\r\n        backgroundColor: constants.TERTIARYCOLOR\r\n    },\r\n    avatarImage: {\r\n        width: 80,\r\n        height: 80,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto'\r\n    },\r\n    // renderSubsection\r\n    subsectionContainer: {\r\n        flexDirection: 'column',\r\n        borderWidth: 3,\r\n        width: '100%',\r\n        marginBottom: 10,\r\n        borderRadius: 10,\r\n        overflow: 'hidden'\r\n    },\r\n    subsectionTitleContainer: {\r\n        marginBottom: 10,\r\n        padding: 10\r\n    },\r\n    subsectionTitleText: {\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        fontSize: constants.H2FONTSIZE,\r\n        color: constants.TERTIARYCOLOR,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    },\r\n    subsectionAvatarsContainer: {\r\n        flexDirection: 'row',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    }\r\n});"],"mappings":";;;;;;;;;;;;;AAEA,SAASA,UAAU,QAAQ,OAAO;AAGlC,SAASC,cAAc,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,iCAAiC;AACtG,SAASC,SAAS,QAAQ,uBAAuB;AACjD,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAO,KAAKC,SAAS,MAAM,iBAAiB;AAE5C,OAAOC,WAAW,MAAM,4BAA4B;AAEpD,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY7C,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAA4F;EAAA,IAAvFC,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEC,EAAE,GAAAF,IAAA,CAAFE,EAAE;IAAEC,MAAM,GAAAH,IAAA,CAANG,MAAM;IAAEC,KAAK,GAAAJ,IAAA,CAALI,KAAK;IAAEC,UAAU,GAAAL,IAAA,CAAVK,UAAU;IAAEC,QAAQ,GAAAN,IAAA,CAARM,QAAQ;IAAEC,eAAe,GAAAP,IAAA,CAAfO,eAAe;EAEhF,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtB,IAAI,CAACF,QAAQ,EAAE;MACXb,MAAM,CAACgB,IAAI,CAAC,2BAA2B,EAAE;QACrCC,OAAO,EAAET,MAAM;QACfU,SAAS,EAAET;MACf,CAAC,CAAC,CAACU,IAAI,CAAC,UAACC,GAAG,EAAK;QAGbN,eAAe,CAACL,EAAE,CAAC;MACvB,CAAC,CAAC,CAACY,KAAK,CAAC,UAACC,GAAG,EAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB,CAAC,CAAC;IACN;EACJ,CAAC;EAED,OACIjB,OAAA,CAACoB,gBAAgB;IACbC,KAAK,EAAEC,MAAM,CAACC,eAAgB;IAC9BC,aAAa,EAAE,CAAE;IACjBC,QAAQ,EAAE,CAAClB,UAAW;IACtBmB,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMhB,WAAW,CAAC,CAAC;IAAA,CAAC;IAAAiB,QAAA,GAE7B3B,OAAA,CAAC4B,IAAI;MAACP,KAAK,EAAAQ,aAAA;QACPC,eAAe,EAAEtB,QAAQ,GACnBZ,SAAS,CAACmC,MAAM,GAChBzB;MAAK,GACRgB,MAAM,CAACU,qBAAqB;IAC7B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAO,CAAC,EACdrC,OAAA,CAAC4B,IAAI;MAACP,KAAK,EAAAQ,aAAA;QACPS,WAAW,EAAE9B,QAAQ,GACfZ,SAAS,CAACmC,MAAM,GAChBzB;MAAK,GACRgB,MAAM,CAACiB,oBAAoB,CAC5B;MAAAZ,QAAA,EACF3B,OAAA,CAACwC,KAAK;QACFnB,KAAK,EAAAQ,aAAA;UACDY,OAAO,EAAElC,UAAU,GAAG,CAAC,GAAG;QAAG,GAC1Be,MAAM,CAACoB,WAAW,CACvB;QACFrC,MAAM,EAAEA;MAAO;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAClB;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACA,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACO,CAAC;AAE3B,CAAC;AAED,eAAe,SAASM,YAAYA,CAAAC,KAAA,EAAuC;EAAA,IAAAC,MAAA;EAAA,IAArCC,UAAU,GAAAF,KAAA,CAAVE,UAAU;EAE5C,IAAAC,WAAA,GAAmEzD,UAAU,CAACO,WAAW,CAAC;IAAlFmD,WAAW,GAAAD,WAAA,CAAXC,WAAW;IAAEC,UAAU,GAAAF,WAAA,CAAVE,UAAU;IAAEC,YAAY,GAAAH,WAAA,CAAZG,YAAY;IAAEzC,eAAe,GAAAsC,WAAA,CAAftC,eAAe;EAK9D,IAAI0C,UAAkB,GAAGC,MAAM,CAACC,MAAM,CAACL,WAAW,CAACM,iBAAiB,CAAC,CAACC,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKC,IAAI,CAACC,GAAG,CAACH,CAAC,EAAEC,CAAC,CAAC;EAAA,EAAC;EACtGN,UAAU,GAAIA,UAAU,IAAIF,UAAU,GAAIA,UAAU,GAAGE,UAAU;EACjE,IAAMS,KAAK,GAAGlE,SAAS,CAACyD,UAAU,EAAE,KAAK,CAAC,CAACS,KAAK;EAEhD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAClBD,KAAuC,EACvCE,SAAmB,EACnBC,SAAiB,EAChB;IAED,IAAMxD,UAAU,GAAGwD,SAAS,IAAIH,KAAK;IACrC,IAAMtD,KAAK,GAAGC,UAAU,GAAGd,iBAAiB,CAACmE,KAAK,CAAC,GAAGhE,SAAS,CAACoE,IAAI;IAEpE,OACIhE,OAAA,CAAC4B,IAAI;MACDP,KAAK,EAAAQ,aAAA;QACDS,WAAW,EAAEhC;MAAK,GACfgB,MAAM,CAAC2C,mBAAmB,CAC/B;MAAAtC,QAAA,GAEF3B,OAAA,CAAC4B,IAAI;QAACP,KAAK,EAAAQ,aAAA;UACPC,eAAe,EAAExB;QAAK,GACnBgB,MAAM,CAAC4C,wBAAwB,CAChC;QAAAvC,QAAA,EACF3B,OAAA,CAACmE,IAAI;UAAC9C,KAAK,EAAEC,MAAM,CAAC8C,mBAAoB;UAAAzC,QAAA,GAAC,QAAM,EAACiC,KAAK,EAAC,GAAC;QAAA;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAS,MAAM;MAAC;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAS,MACxD,CAAC,EACX7C,OAAA,CAAC4B,IAAI;QAACP,KAAK,EAAEC,MAAM,CAAC+C,0BAA2B;QAAA1C,QAAA,EAC1CmC,SAAS,CAACQ,GAAG,CAAC,UAACzD,SAAiB;UAAA,OAC7Bb,OAAA,CAACC,SAAS;YACNE,MAAM,EAAE6C,WAAW,CAACpC,OAAQ;YAC5BR,EAAE,EAAES,SAAU;YACdR,MAAM,EAAEd,cAAc,CAACsB,SAAS,CAAE;YAClCP,KAAK,EAAEA,KAAM;YACbC,UAAU,EAAEA,UAAW;YACvBC,QAAQ,EAAEK,SAAS,KAAKqC,YAAa;YACrCzC,eAAe,EAAEA;UAAgB;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAS,MACpC,CAAC;QAAA,CACL;MAAC;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAS,MACA,CAAC;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAS,MACL,CAAC;EAEf,CAAC;EAED,OACA7C,OAAA,CAACuE,YAAY;IAAClD,KAAK,EAAEC,MAAM,CAACkD,SAAU;IAAA7C,QAAA,GAClC3B,OAAA,CAACF,MAAM;MAAC2E,KAAK,EAAC,kBAAkB;MAAC3B,UAAU,EAAEA;IAAW;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3DpC,OAAA,CAAC0E,UAAU;MACPrD,KAAK,EAAEC,MAAM,CAACqD,oBAAqB;MACnCC,OAAO,EAAE,KAAM;MACfC,4BAA4B,EAAE,KAAM;MACpCC,8BAA8B,EAAE,KAAM;MACtCC,cAAc,EAAC,OAAO;MACtBC,qBAAqB,EAAE,IAAK;MAAArD,QAAA,EAE3ByB,MAAM,CAAC6B,OAAO,CAACzF,iBAAiB,CAAC,CAAC8E,GAAG,CAAC,UAAAY,KAAA;QAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,KAAA;UAAEG,GAAG,GAAAF,KAAA;UAAEG,KAAK,GAAAH,KAAA;QAAA,OAAMtB,gBAAgB,CAACwB,GAAG,EAAEC,KAAK,EAAE1B,KAAK,CAAC;MAAA;IAAC;MAAA3B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAElB;AAED,IAAMd,MAAM,GAAGiE,UAAU,CAACC,MAAM,CAAC;EAC7BhB,SAAS,EAAE;IACPiB,OAAO,EAAE,EAAE;IACXC,gBAAgB,EAAE,CAAC;IACnBC,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE;EACV,CAAC;EACDjB,oBAAoB,EAAE;IAClBkB,aAAa,EAAE;EACnB,CAAC;EACDtE,eAAe,EAAE;IACbmE,gBAAgB,EAAE,CAAC;IACnBI,YAAY,EAAE,EAAE;IAChBhE,eAAe,EAAElC,SAAS,CAACmG;EAC/B,CAAC;EACD/D,qBAAqB,EAAE;IACnBgE,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVN,SAAS,EAAE,EAAE;IACbO,YAAY,EAAE;EAClB,CAAC;EACD3D,oBAAoB,EAAE;IAClByD,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXE,WAAW,EAAE,CAAC;IACdD,YAAY,EAAE,EAAE;IAChBP,SAAS,EAAE,CAAC,GAAG;IACf7D,eAAe,EAAElC,SAAS,CAACmG;EAC/B,CAAC;EACDrD,WAAW,EAAE;IACTsD,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVG,UAAU,EAAE,MAAM;IAClBC,WAAW,EAAE,MAAM;IACnBV,SAAS,EAAE,MAAM;IACjBG,YAAY,EAAE;EAClB,CAAC;EAED7B,mBAAmB,EAAE;IACjB4B,aAAa,EAAE,QAAQ;IACvBM,WAAW,EAAE,CAAC;IACdH,KAAK,EAAE,MAAM;IACbF,YAAY,EAAE,EAAE;IAChBI,YAAY,EAAE,EAAE;IAChBI,QAAQ,EAAE;EACd,CAAC;EACDpC,wBAAwB,EAAE;IACtB4B,YAAY,EAAE,EAAE;IAChBL,OAAO,EAAE;EACb,CAAC;EACDrB,mBAAmB,EAAE;IACjBmC,UAAU,EAAE3G,SAAS,CAAC4G,cAAc;IACpCC,QAAQ,EAAE7G,SAAS,CAAC8G,UAAU;IAC9BpG,KAAK,EAAEV,SAAS,CAACmG,aAAa;IAC9BK,UAAU,EAAE,MAAM;IAClBC,WAAW,EAAE;EACjB,CAAC;EACDhC,0BAA0B,EAAE;IACxBwB,aAAa,EAAE,KAAK;IACpBO,UAAU,EAAE,MAAM;IAClBC,WAAW,EAAE;EACjB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}