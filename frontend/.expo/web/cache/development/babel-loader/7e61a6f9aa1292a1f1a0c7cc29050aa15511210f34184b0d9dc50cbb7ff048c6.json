{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Toby Usher\\\\Documents\\\\dev\\\\quivo-app\\\\frontend\\\\screens\\\\LearnScreen\\\\components\\\\FlagButton.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useContext } from \"react\";\nimport * as constants from \"../../../constants\";\nimport UserContext from \"../../../contexts/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FlagButton(_ref) {\n  var item = _ref.item;\n  var _useContext = useContext(UserContext),\n    currentLanguageCode = _useContext.currentLanguageCode,\n    updateCurrentLanguageCode = _useContext.updateCurrentLanguageCode;\n  var flagImageMap = {\n    'ru': require('../../../assets/ru.png'),\n    'de': require('../../../assets/de.png'),\n    'es': require('../../../assets/es.png'),\n    'fr': require('../../../assets/fr.png'),\n    'th': require('../../../assets/th.png')\n  };\n  var handlePress = function handlePress() {\n    updateCurrentLanguageCode(item.language_code);\n  };\n  return _jsxDEV(_Fragment, {\n    children: _jsxDEV(TouchableOpacity, {\n      activeOpacity: 1,\n      onPress: function onPress() {\n        handlePress();\n      },\n      children: _jsxDEV(View, {\n        style: _objectSpread(_objectSpread(_objectSpread({}, styles.flagImageContainer), styles.flagImageContainerPopup), {}, {\n          borderColor: constants.TERTIARYCOLOR + (currentLanguageCode == item.language_code ? 'FF' : '00')\n        }),\n        children: _jsxDEV(Image, {\n          source: flagImageMap[item.language_code],\n          style: styles.flagImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\nvar styles = StyleSheet.create({\n  flagImageContainer: {\n    borderRadius: 10,\n    marginRight: 10,\n    overflow: \"hidden\",\n    height: 50,\n    width: 70\n  },\n  flagImageContainerPopup: {\n    borderWidth: 3\n  },\n  flagImage: {\n    width: \"100%\",\n    height: \"100%\"\n  }\n});","map":{"version":3,"names":["useContext","constants","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","FlagButton","_ref","item","_useContext","currentLanguageCode","updateCurrentLanguageCode","flagImageMap","require","handlePress","language_code","children","TouchableOpacity","activeOpacity","onPress","View","style","_objectSpread","styles","flagImageContainer","flagImageContainerPopup","borderColor","TERTIARYCOLOR","Image","source","flagImage","fileName","_jsxFileName","lineNumber","columnNumber","StyleSheet","create","borderRadius","marginRight","overflow","height","width","borderWidth"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/LearnScreen/components/FlagButton.tsx"],"sourcesContent":["import {View, StyleSheet, TouchableOpacity, Image } from \"react-native\";\r\nimport { useContext } from \"react\";\r\nimport PNG from 'pngjs';\r\nimport * as constants from \"../../../constants\";\r\nimport UserContext from \"../../../contexts/UserContext\";\r\n\r\ninterface IFlagButtonProps {\r\n    item: {\r\n        id: number,\r\n        language_code: string,\r\n        language_name: string\r\n    }\r\n}\r\n\r\nexport default function FlagButton({ item }: IFlagButtonProps){\r\n\r\n    const { currentLanguageCode, updateCurrentLanguageCode } = useContext(UserContext);\r\n\r\n    const flagImageMap: Record<string, PNG> = {\r\n        'ru': require('../../../assets/ru.png'),\r\n        'de': require('../../../assets/de.png'),\r\n        'es': require('../../../assets/es.png'),\r\n        'fr': require('../../../assets/fr.png'),\r\n        'th': require('../../../assets/th.png'),\r\n    };\r\n\r\n    const handlePress = () => {\r\n        updateCurrentLanguageCode(item.language_code);\r\n    }\r\n\r\n    return(<>\r\n        <TouchableOpacity\r\n            activeOpacity={1}\r\n            onPress={() => {handlePress()}}>\r\n            <View style={{\r\n                ...styles.flagImageContainer,\r\n                ...styles.flagImageContainerPopup,\r\n                borderColor: constants.TERTIARYCOLOR + (\r\n                    currentLanguageCode == item.language_code ? 'FF' : '00'\r\n                    )\r\n                }}>\r\n                <Image\r\n                    source={flagImageMap[item.language_code]}\r\n                    style={styles.flagImage}\r\n                />\r\n            </View>\r\n        </TouchableOpacity>\r\n    </>);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    flagImageContainer: {\r\n        borderRadius: 10,\r\n        marginRight: 10,\r\n        overflow: \"hidden\",\r\n        height: 50,\r\n        width: 70,\r\n    },\r\n    flagImageContainerPopup: {\r\n        borderWidth: 3\r\n    },\r\n    flagImage: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n});"],"mappings":";;;;;;;;AACA,SAASA,UAAU,QAAQ,OAAO;AAElC,OAAO,KAAKC,SAAS,MAAM,oBAAoB;AAC/C,OAAOC,WAAW,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAUxD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAA4B;EAAA,IAAzBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAErC,IAAAC,WAAA,GAA2DV,UAAU,CAACE,WAAW,CAAC;IAA1ES,mBAAmB,GAAAD,WAAA,CAAnBC,mBAAmB;IAAEC,yBAAyB,GAAAF,WAAA,CAAzBE,yBAAyB;EAEtD,IAAMC,YAAiC,GAAG;IACtC,IAAI,EAAEC,OAAO,CAAC,wBAAwB,CAAC;IACvC,IAAI,EAAEA,OAAO,CAAC,wBAAwB,CAAC;IACvC,IAAI,EAAEA,OAAO,CAAC,wBAAwB,CAAC;IACvC,IAAI,EAAEA,OAAO,CAAC,wBAAwB,CAAC;IACvC,IAAI,EAAEA,OAAO,CAAC,wBAAwB;EAC1C,CAAC;EAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBH,yBAAyB,CAACH,IAAI,CAACO,aAAa,CAAC;EACjD,CAAC;EAED,OAAOZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,EACHb,OAAA,CAACc,gBAAgB;MACbC,aAAa,EAAE,CAAE;MACjBC,OAAO,EAAE,SAAAA,QAAA,EAAM;QAACL,WAAW,CAAC,CAAC;MAAA,CAAE;MAAAE,QAAA,EAC/Bb,OAAA,CAACiB,IAAI;QAACC,KAAK,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACJC,MAAM,CAACC,kBAAkB,GACzBD,MAAM,CAACE,uBAAuB;UACjCC,WAAW,EAAE1B,SAAS,CAAC2B,aAAa,IAChCjB,mBAAmB,IAAIF,IAAI,CAACO,aAAa,GAAG,IAAI,GAAG,IAAI;QACtD,EACH;QAAAC,QAAA,EACFb,OAAA,CAACyB,KAAK;UACFC,MAAM,EAAEjB,YAAY,CAACJ,IAAI,CAACO,aAAa,CAAE;UACzCM,KAAK,EAAEE,MAAM,CAACO;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC,gBACrB,CAAC;AACP;AAEA,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAM,CAAC;EAC7BZ,kBAAkB,EAAE;IAChBa,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,QAAQ;IAClBC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACX,CAAC;EACDhB,uBAAuB,EAAE;IACrBiB,WAAW,EAAE;EACjB,CAAC;EACDZ,SAAS,EAAE;IACPW,KAAK,EAAE,MAAM;IACbD,MAAM,EAAE;EACZ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}