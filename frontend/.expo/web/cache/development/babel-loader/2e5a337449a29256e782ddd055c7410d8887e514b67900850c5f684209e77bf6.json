{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Toby Usher\\\\Documents\\\\dev\\\\quivo-app\\\\frontend\\\\screens\\\\WordListScreen\\\\index.tsx\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useEffect, useState, useContext, useRef, useCallback } from \"react\";\nimport * as constants from \"../../constants\";\nimport client from \"../../utils/axios\";\nimport UserContext from \"../../contexts/UserContext\";\nimport BottomNavBar from \"../../components/BottomNavBar\";\nimport ProgressBarButton from \"./components/ProgressBarButton\";\nimport WordItem from \"./components/WordItem\";\nimport ToggleButton from \"../../components/ToggleButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WordListScreen(_ref) {\n  var _this = this;\n  var navigation = _ref.navigation;\n  var _useContext = useContext(UserContext),\n    currentUser = _useContext.currentUser,\n    knownWords = _useContext.knownWords,\n    dailyWordCount = _useContext.dailyWordCount;\n  var _useState = useState(constants.PURPLEREGULAR),\n    _useState2 = _slicedToArray(_useState, 2),\n    primaryColor = _useState2[0],\n    setPrimaryColor = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    words = _useState4[0],\n    setWords = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    paginator = _useState6[0],\n    setPaginator = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    wordCounts = _useState8[0],\n    setWordCounts = _useState8[1];\n  var _useState9 = useState('1-1000'),\n    _useState10 = _slicedToArray(_useState9, 2),\n    activeButton = _useState10[0],\n    setActiveButton = _useState10[1];\n  var _useState11 = useState(true),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showKnownWords = _useState12[0],\n    setShowKnownWords = _useState12[1];\n  var flatListRef = useRef();\n  var renderItem = useCallback(function (_ref2) {\n    var item = _ref2.item;\n    return _jsxDEV(WordItem, {\n      navigation: navigation,\n      item: item,\n      primaryColor: primaryColor,\n      showKnownWords: showKnownWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 48\n    }, _this);\n  }, [primaryColor, showKnownWords]);\n  useEffect(function () {\n    fetchWordCounts();\n    fetchWordsData(1, 100);\n  }, []);\n  useEffect(function () {\n    setPrimaryColor(colorByRange[activeButton]);\n    fetchWordsData(initialWordIndex[activeButton], initialWordIndex[activeButton] + 99).then(function () {\n      flatListRef.current.scrollToOffset({\n        animated: false,\n        offset: 0\n      });\n    });\n  }, [activeButton]);\n  useEffect(function () {\n    fetchWordsData(initialWordIndex[activeButton] + paginator * 100, initialWordIndex[activeButton] + 99 + paginator * 100);\n  }, [paginator]);\n  var initialWordIndex = {\n    '1-1000': 1,\n    '1001-2000': 1001,\n    '2001-3000': 2001,\n    '3001-4000': 3001,\n    '4001-5000': 4001,\n    '5000+': 5001\n  };\n  var colorByRange = {\n    '1-1000': constants.PURPLEREGULAR,\n    '1001-2000': constants.PRIMARYCOLOR,\n    '2001-3000': constants.ORANGEREGULAR,\n    '3001-4000': constants.BLUEREGULAR,\n    '4001-5000': constants.GREENREGULAR,\n    '5000+': constants.PURPLEREGULAR\n  };\n  var fetchWordCounts = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var res = yield client.get('./api/users/' + currentUser.user_id + '/wordcounts', {\n          withCredentials: true\n        });\n        setWordCounts(res.data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchWordCounts() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fetchWordsData = function () {\n    var _ref4 = _asyncToGenerator(function* (start_index, end_index) {\n      try {\n        var res = yield client.post('./api/words', {\n          start_index: start_index,\n          end_index: end_index,\n          withCredentials: true\n        });\n        var valuesArray = Object.values(res.data);\n        setWords([].concat(_toConsumableArray(words), valuesArray));\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchWordsData(_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handlePress = function handlePress(activeButton) {\n    setActiveButton(activeButton);\n    setWords([]);\n    setPaginator(0);\n  };\n  var loadMore = function loadMore() {\n    console.log('Loading more');\n    setPaginator(function (val) {\n      return val + 1;\n    });\n  };\n  var buttonData = [{\n    id: '1-1000',\n    label: '0-1k'\n  }, {\n    id: '1001-2000',\n    label: '1-2k'\n  }, {\n    id: '2001-3000',\n    label: '2-3k'\n  }, {\n    id: '3001-4000',\n    label: '3-4k'\n  }, {\n    id: '4001-5000',\n    label: '4-5k'\n  }, {\n    id: '5000+',\n    label: '5k+'\n  }];\n  var renderProgressBarButton = function renderProgressBarButton(id, label) {\n    return _jsxDEV(ProgressBarButton, {\n      id: id,\n      primaryColor: colorByRange[id],\n      label: label,\n      currentValue: wordCounts[id],\n      isActive: activeButton === id,\n      onPress: handlePress,\n      maxValue: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, _this);\n  };\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(SafeAreaView, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.titleText,\n        children: \"Frequency List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), _jsxDEV(View, {\n        children: [_jsxDEV(ScrollView, {\n          style: styles.topButtonContainer,\n          horizontal: true,\n          bounces: false,\n          showsVerticalScrollIndicator: false,\n          showsHorizontalScrollIndicator: false,\n          overScrollMode: \"never\",\n          removeClippedSubviews: true,\n          children: buttonData.map(function (_ref5) {\n            var id = _ref5.id,\n              label = _ref5.label;\n            return renderProgressBarButton(id, label);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), _jsxDEV(View, {\n          style: styles.headerContainer,\n          children: [_jsxDEV(View, {\n            style: styles.knownWordsToggleContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.knownWordsToggleText,\n              children: \"Inc. known words\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this), _jsxDEV(ToggleButton, {\n              initiallySelected: showKnownWords,\n              size: 20,\n              onValueChange: function onValueChange() {\n                setShowKnownWords(!showKnownWords);\n              },\n              primaryColor: primaryColor,\n              secondaryColor: primaryColor + '55'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this), _jsxDEV(Text, {\n            style: styles.headerContainerText,\n            children: activeButton + ' Most Common'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), words.length !== 0 ? _jsxDEV(FlatList, {\n        style: styles.wordList,\n        data: words,\n        bounces: false,\n        overScrollMode: \"never\",\n        removeClippedSubviews: true,\n        ref: flatListRef,\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        onEndReached: function onEndReached() {\n          return loadMore();\n        },\n        onEndReachedThreshold: 0.2,\n        initialNumToRender: 30,\n        maxToRenderPerBatch: 10,\n        renderItem: renderItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this) : _jsxDEV(ActivityIndicator, {\n        style: styles.activityIndicator,\n        size: \"large\",\n        color: primaryColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), _jsxDEV(BottomNavBar, {\n      hilighted: \"WordList\",\n      navigation: navigation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50,\n    paddingBottom: 180,\n    paddingHorizontal: 20,\n    backgroundColor: constants.TERTIARYCOLOR\n  },\n  titleText: {\n    fontFamily: constants.FONTFAMILYBOLD,\n    fontSize: constants.H2FONTSIZE,\n    color: constants.BLACK,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10\n  },\n  headerContainerText: {\n    fontSize: constants.H2FONTSIZE,\n    fontFamily: constants.FONTFAMILYBOLD,\n    color: constants.BLACK\n  },\n  knownWordsToggleContainer: {\n    flexDirection: 'row',\n    height: 20\n  },\n  knownWordsToggleText: {\n    marginRight: 5,\n    marginLeft: 'auto',\n    marginTop: 'auto',\n    marginBottom: 'auto'\n  },\n  wordList: {\n    marginTop: 10\n  },\n  activityIndicator: {\n    marginTop: 20\n  }\n});","map":{"version":3,"names":["useEffect","useState","useContext","useRef","useCallback","constants","client","UserContext","BottomNavBar","ProgressBarButton","WordItem","ToggleButton","jsxDEV","_jsxDEV","Fragment","_Fragment","WordListScreen","_ref","_this","navigation","_useContext","currentUser","knownWords","dailyWordCount","_useState","PURPLEREGULAR","_useState2","_slicedToArray","primaryColor","setPrimaryColor","_useState3","_useState4","words","setWords","_useState5","_useState6","paginator","setPaginator","_useState7","_useState8","wordCounts","setWordCounts","_useState9","_useState10","activeButton","setActiveButton","_useState11","_useState12","showKnownWords","setShowKnownWords","flatListRef","renderItem","_ref2","item","fileName","_jsxFileName","lineNumber","columnNumber","fetchWordCounts","fetchWordsData","colorByRange","initialWordIndex","then","current","scrollToOffset","animated","offset","PRIMARYCOLOR","ORANGEREGULAR","BLUEREGULAR","GREENREGULAR","_ref3","_asyncToGenerator","res","get","user_id","withCredentials","data","error","console","apply","arguments","_ref4","start_index","end_index","post","valuesArray","Object","values","concat","_toConsumableArray","_x","_x2","handlePress","loadMore","log","val","buttonData","id","label","renderProgressBarButton","currentValue","isActive","onPress","maxValue","children","SafeAreaView","style","styles","container","Text","titleText","View","ScrollView","topButtonContainer","horizontal","bounces","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","overScrollMode","removeClippedSubviews","map","_ref5","headerContainer","knownWordsToggleContainer","knownWordsToggleText","initiallySelected","size","onValueChange","secondaryColor","headerContainerText","length","FlatList","wordList","ref","onEndReached","onEndReachedThreshold","initialNumToRender","maxToRenderPerBatch","ActivityIndicator","activityIndicator","color","hilighted","StyleSheet","create","paddingTop","paddingBottom","paddingHorizontal","backgroundColor","TERTIARYCOLOR","fontFamily","FONTFAMILYBOLD","fontSize","H2FONTSIZE","BLACK","marginLeft","marginRight","marginBottom","flexDirection","height","marginTop"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/WordListScreen/index.tsx"],"sourcesContent":["import { View, ScrollView, Text, StyleSheet, SafeAreaView, FlatList, ActivityIndicator } from \"react-native\";\r\nimport { useEffect, useState, useContext, useRef, useCallback } from \"react\";\r\nimport { NativeStackHeaderProps } from \"@react-navigation/native-stack\";\r\n// Constants\r\nimport * as constants from \"../../constants\";\r\n// Utils\r\nimport client from \"../../utils/axios\";\r\n// Contexts\r\nimport UserContext from \"../../contexts/UserContext\";\r\n// Components\r\nimport BottomNavBar from \"../../components/BottomNavBar\";\r\nimport ProgressBarButton from \"./components/ProgressBarButton\";\r\nimport WordItem from \"./components/WordItem\";\r\nimport ToggleButton from \"../../components/ToggleButton\";\r\n\r\nexport default function WordListScreen({navigation}: NativeStackHeaderProps) {\r\n\r\n    const { currentUser, knownWords, dailyWordCount } = useContext(UserContext);\r\n    \r\n    const [primaryColor, setPrimaryColor] = useState<string>(constants.PURPLEREGULAR);\r\n    const [words, setWords] = useState([]);\r\n    const [paginator, setPaginator] = useState<number>(0);\r\n    const [wordCounts, setWordCounts] = useState<Record<string, number>>({});\r\n    const [activeButton, setActiveButton] = useState<string>('1-1000');\r\n    const [showKnownWords, setShowKnownWords] = useState<boolean>(true);\r\n\r\n    const flatListRef = useRef();\r\n\r\n    const renderItem = useCallback(({item}) => <WordItem navigation={navigation} item={item} primaryColor={primaryColor} showKnownWords={showKnownWords} />, [primaryColor, showKnownWords]);\r\n    \r\n    useEffect(() => {\r\n        fetchWordCounts();\r\n        fetchWordsData(1, 100);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Change the color scheme\r\n        setPrimaryColor(colorByRange[activeButton]);\r\n\r\n        fetchWordsData(\r\n            initialWordIndex[activeButton],\r\n            initialWordIndex[activeButton] + 99\r\n        ).then(() => {\r\n            // Make sure Flatlist returns to top when new data added\r\n            flatListRef.current.scrollToOffset({ animated: false, offset: 0 });\r\n        });\r\n    }, [activeButton]);\r\n\r\n    useEffect(() => {\r\n        // Fetch more words data when paginator is incremented;\r\n        fetchWordsData(\r\n            initialWordIndex[activeButton] + (paginator * 100),\r\n            initialWordIndex[activeButton] + 99 + (paginator * 100)\r\n            )\r\n    }, [paginator]);\r\n\r\n    // Temporary just to test\r\n    const initialWordIndex: Record<string, number> = {\r\n        '1-1000': 1,\r\n        '1001-2000': 1001,\r\n        '2001-3000': 2001,\r\n        '3001-4000': 3001,\r\n        '4001-5000': 4001,\r\n        '5000+': 5001,   \r\n    }\r\n\r\n    const colorByRange: Record<string, string> = {\r\n        '1-1000': constants.PURPLEREGULAR,\r\n        '1001-2000': constants.PRIMARYCOLOR,\r\n        '2001-3000': constants.ORANGEREGULAR,\r\n        '3001-4000': constants.BLUEREGULAR,\r\n        '4001-5000': constants.GREENREGULAR,\r\n        '5000+': constants.PURPLEREGULAR,   \r\n    }\r\n\r\n    // NOTE: Used in a few places. Should move centrally\r\n    const fetchWordCounts = async() => {\r\n        try {\r\n            const res = await client.get(\r\n                './api/users/' + currentUser.user_id + '/wordcounts',\r\n                { withCredentials: true }\r\n                );\r\n            setWordCounts(res.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const fetchWordsData = async(start_index: number, end_index: number) => {\r\n        try {\r\n            const res = await client.post('./api/words', {\r\n                start_index: start_index,\r\n                end_index: end_index,\r\n                withCredentials: true\r\n            });\r\n\r\n            // Don't need the word keys, just an array of each word's data\r\n            let valuesArray = Object.values(res.data);\r\n            setWords([...words, ...valuesArray]);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const handlePress = (activeButton: string) => {\r\n        setActiveButton(activeButton);\r\n\r\n        // Clear words and set paginator back to zero\r\n        setWords([]);\r\n        setPaginator(0);\r\n    }\r\n\r\n    const loadMore = () => {\r\n        console.log('Loading more');\r\n        setPaginator((val) => val + 1);\r\n    }\r\n\r\n    const buttonData = [\r\n        {id: '1-1000', label: '0-1k'},\r\n        {id: '1001-2000', label: '1-2k'},\r\n        {id: '2001-3000', label: '2-3k'},\r\n        {id: '3001-4000', label: '3-4k'},\r\n        {id: '4001-5000', label: '4-5k'},\r\n        {id: '5000+', label: '5k+'},\r\n    ];\r\n\r\n    const renderProgressBarButton = (id: string, label: string) => (\r\n        <ProgressBarButton\r\n            id={id}\r\n            primaryColor={colorByRange[id]}\r\n            label={label}\r\n            currentValue={wordCounts[id]}\r\n            isActive={activeButton === id}\r\n            onPress={handlePress}\r\n            maxValue={1000}\r\n        />\r\n    );\r\n    \r\n    return (\r\n        <>\r\n        <SafeAreaView style={styles.container}>\r\n            <Text style={styles.titleText}>Frequency List</Text>\r\n            <View>\r\n                <ScrollView\r\n                    style={styles.topButtonContainer}\r\n                    horizontal={true}\r\n                    bounces={false}\r\n                    showsVerticalScrollIndicator={false} \r\n                    showsHorizontalScrollIndicator={false}\r\n                    overScrollMode=\"never\"\r\n                    removeClippedSubviews={true}\r\n                    >\r\n                    {buttonData.map(({id, label}) => renderProgressBarButton(id, label))}\r\n                </ScrollView>\r\n                <View style={styles.headerContainer}>\r\n                    <View style={styles.knownWordsToggleContainer}>\r\n                        <Text style={styles.knownWordsToggleText}>Inc. known words</Text>\r\n                        <ToggleButton\r\n                            initiallySelected={showKnownWords}\r\n                            size={20}\r\n                            onValueChange={() => {setShowKnownWords(!showKnownWords)}}\r\n                            primaryColor={primaryColor}\r\n                            secondaryColor={primaryColor + '55'}\r\n                            />\r\n                    </View>\r\n                    <Text style={styles.headerContainerText}>{activeButton + ' Most Common'}</Text>\r\n                </View>\r\n            </View>\r\n            {words.length !== 0 ?\r\n            <FlatList\r\n                style={styles.wordList}\r\n                data={words}\r\n                bounces={false}\r\n                overScrollMode=\"never\"\r\n                removeClippedSubviews={true}\r\n                ref={flatListRef}\r\n                showsVerticalScrollIndicator={false} \r\n                showsHorizontalScrollIndicator={false}\r\n                onEndReached={() => loadMore()}\r\n                onEndReachedThreshold={0.2}\r\n                initialNumToRender={30} // Look into these two\r\n                maxToRenderPerBatch={10}\r\n                renderItem={renderItem}\r\n            />\r\n            : <ActivityIndicator style={styles.activityIndicator} size='large' color={primaryColor} />\r\n            }\r\n        </SafeAreaView>\r\n        <BottomNavBar hilighted='WordList' navigation={navigation} />\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingTop: 50,\r\n        paddingBottom: 180,\r\n        paddingHorizontal: 20,\r\n        backgroundColor: constants.TERTIARYCOLOR\r\n    },\r\n    titleText: {\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        fontSize: constants.H2FONTSIZE,\r\n        color: constants.BLACK,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginBottom: 10\r\n    },\r\n    headerContainerText: {\r\n        fontSize: constants.H2FONTSIZE,\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        color: constants.BLACK\r\n    },\r\n    knownWordsToggleContainer: {\r\n        flexDirection: 'row',\r\n        height: 20\r\n    },\r\n    knownWordsToggleText: {\r\n        marginRight: 5,\r\n        marginLeft: 'auto',\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto'\r\n    },\r\n    wordList: {\r\n        marginTop: 10\r\n    },\r\n    activityIndicator: {\r\n        marginTop: 20\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}