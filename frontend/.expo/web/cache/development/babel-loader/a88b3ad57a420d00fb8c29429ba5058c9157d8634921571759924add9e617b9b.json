{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport client from \"../../../utils/axios\";\nexport var useFetchWordCounts = function useFetchWordCounts(currentUser) {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    wordCounts = _useState2[0],\n    setWordCounts = _useState2[1];\n  var fetchWordCounts = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var res = yield client.get('./api/users/' + currentUser.user_id + '/wordcounts', {\n          withCredentials: true\n        });\n        setWordCounts(res.data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchWordCounts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchWordCounts();\n  }, []);\n  return wordCounts;\n};","map":{"version":3,"names":["useState","useEffect","client","useFetchWordCounts","currentUser","_useState","_useState2","_slicedToArray","wordCounts","setWordCounts","fetchWordCounts","_ref","_asyncToGenerator","res","get","user_id","withCredentials","data","error","console","apply","arguments"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/AccountScreen/hooks/useFetchWordCounts.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport client from \"../../../utils/axios\";\r\n\r\nexport const useFetchWordCounts = (currentUser) => {\r\n    const [wordCounts, setWordCounts] = useState<Record<string, number>>({});\r\n\r\n    const fetchWordCounts = async() => {\r\n        try {\r\n            const res = await client.get(\r\n                './api/users/' + currentUser.user_id + '/wordcounts',\r\n                { withCredentials: true }\r\n            );\r\n            setWordCounts(res.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchWordCounts();\r\n    }, []);\r\n\r\n    return wordCounts;\r\n};"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AAEzC,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,WAAW,EAAK;EAC/C,IAAAC,SAAA,GAAoCL,QAAQ,CAAyB,CAAC,CAAC,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjEG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,eAAe;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAW;MAC/B,IAAI;QACA,IAAMC,GAAG,SAASX,MAAM,CAACY,GAAG,CACxB,cAAc,GAAGV,WAAW,CAACW,OAAO,GAAG,aAAa,EACpD;UAAEC,eAAe,EAAE;QAAK,CAC5B,CAAC;QACDP,aAAa,CAACI,GAAG,CAACI,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IAAA,gBAVKR,eAAeA,CAAA;MAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUpB;EAEDpB,SAAS,CAAC,YAAM;IACZS,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,UAAU;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}