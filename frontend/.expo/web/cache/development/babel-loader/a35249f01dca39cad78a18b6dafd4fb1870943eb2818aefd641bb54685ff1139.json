{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Toby Usher\\\\Documents\\\\dev\\\\quivo-app\\\\frontend\\\\screens\\\\SliderScreen\\\\components\\\\SentenceComplexityPanel.tsx\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useState, useContext } from \"react\";\nimport UserContext from '../../../contexts/UserContext';\nimport Slider from '@react-native-community/slider';\nimport * as constants from \"../../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SentenceComplexityPanel() {\n  var _useContext = useContext(UserContext),\n    currentUser = _useContext.currentUser,\n    currentLanguageCode = _useContext.currentLanguageCode;\n  var exampleSentences = {\n    'fr': 'Malgré la pluie, Marie a décidé de sortir pour acheter des légumes frais au marché local ce matin.',\n    'de': 'Obwohl es regnet, gehen wir spazieren, weil wir die frische Luft und die Schönheit der Natur sehr genießen.',\n    'ru': 'Мама всегда говорила, что жизнь похожа на коробку шоколадных конфет: никогда не знаешь, какую конфету ты достанешь.'\n  };\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    sentenceComponents = _useState2[0],\n    setSentenceComponents = _useState2[1];\n  var _useState3 = useState([1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    activeWordMask = _useState4[0],\n    setActiveWordMask = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    sentenceComplexity = _useState6[0],\n    setSentenceComplexity = _useState6[1];\n  var complexityLabels = {\n    '-2': ['Much Easier', 'Simple language that should be easy for someone of your level to understand.'],\n    '-1': ['Easier', 'Relatively simple for someone of your level.'],\n    '0': ['Normal', 'Some challenging vocabulary, mixed with many more common words.'],\n    '1': ['Harder', 'More challenging vocabulary that may be difficult to understand at your current level.'],\n    '2': ['Much Harder', 'A large variety of challenging vocabulary to really test your limits!']\n  };\n  return _jsxDEV(View, {\n    style: styles.mainContainer,\n    children: [_jsxDEV(View, {\n      style: styles.sliderHeaderContainer,\n      children: _jsxDEV(Text, {\n        style: styles.sliderHeaderText,\n        children: \"Sentence Complexity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), _jsxDEV(Text, {\n      style: styles.complexityLabelText,\n      children: complexityLabels[sentenceComplexity][0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), _jsxDEV(View, {\n      style: styles.sliderContainer,\n      children: _jsxDEV(Slider, {\n        style: {\n          height: 65,\n          padding: 0,\n          margin: 0,\n          transform: [{\n            scaleX: 1.6\n          }, {\n            scaleY: 1.6\n          }]\n        },\n        minimumValue: -2,\n        maximumValue: 2,\n        value: sentenceComplexity,\n        onValueChange: setSentenceComplexity,\n        step: 1,\n        minimumTrackTintColor: constants.GREENREGULAR,\n        maximumTrackTintColor: constants.GREY,\n        thumbTintColor: constants.GREENREGULAR\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), _jsxDEV(View, {\n      style: styles.complexityExplanationContainer,\n      children: _jsxDEV(Text, {\n        style: styles.complexityExplanationText,\n        children: complexityLabels[sentenceComplexity][1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  mainContainer: {\n    borderWidth: 3,\n    borderColor: constants.GREY,\n    padding: 10,\n    borderRadius: 20,\n    marginBottom: 20\n  },\n  sliderHeaderContainer: {\n    marginVertical: 10\n  },\n  sliderHeaderText: {\n    fontFamily: constants.FONTFAMILYBOLD,\n    fontSize: constants.H2FONTSIZE,\n    color: constants.BLACK,\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  sliderContainer: {\n    width: '100%',\n    paddingHorizontal: '20%',\n    marginTop: -20,\n    marginBottom: -10,\n    flexDirection: 'column'\n  },\n  complexityLabelText: {\n    fontFamily: constants.FONTFAMILYBOLD,\n    fontSize: constants.H1FONTSIZE,\n    color: constants.GREENREGULAR,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  complexityExplanationContainer: {\n    marginBottom: 10,\n    height: 80\n  },\n  complexityExplanationText: {\n    fontFamily: constants.FONTFAMILY,\n    fontSize: constants.H2FONTSIZE,\n    color: constants.BLACK,\n    textAlign: 'center',\n    marginHorizontal: 20\n  }\n});","map":{"version":3,"names":["useState","useContext","UserContext","Slider","constants","jsxDEV","_jsxDEV","SentenceComplexityPanel","_useContext","currentUser","currentLanguageCode","exampleSentences","_useState","_useState2","_slicedToArray","sentenceComponents","setSentenceComponents","_useState3","_useState4","activeWordMask","setActiveWordMask","_useState5","_useState6","sentenceComplexity","setSentenceComplexity","complexityLabels","View","style","styles","mainContainer","children","sliderHeaderContainer","Text","sliderHeaderText","fileName","_jsxFileName","lineNumber","columnNumber","complexityLabelText","sliderContainer","height","padding","margin","transform","scaleX","scaleY","minimumValue","maximumValue","value","onValueChange","step","minimumTrackTintColor","GREENREGULAR","maximumTrackTintColor","GREY","thumbTintColor","complexityExplanationContainer","complexityExplanationText","StyleSheet","create","borderWidth","borderColor","borderRadius","marginBottom","marginVertical","fontFamily","FONTFAMILYBOLD","fontSize","H2FONTSIZE","color","BLACK","marginLeft","marginRight","width","paddingHorizontal","marginTop","flexDirection","H1FONTSIZE","FONTFAMILY","textAlign","marginHorizontal"],"sources":["C:/Users/Toby Usher/Documents/dev/quivo-app/frontend/screens/SliderScreen/components/SentenceComplexityPanel.tsx"],"sourcesContent":["import { StyleSheet, View, Text } from \"react-native\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport UserContext from '../../../contexts/UserContext';\r\nimport Slider from '@react-native-community/slider';\r\nimport * as constants from \"../../../constants\";\r\n\r\nexport default function SentenceComplexityPanel() {\r\n\r\n    const { currentUser, currentLanguageCode } = useContext(UserContext);\r\n\r\n    const exampleSentences: Record<string, string> = {\r\n        'fr': 'Malgré la pluie, Marie a décidé de sortir pour acheter des légumes frais au marché local ce matin.',\r\n        'de': 'Obwohl es regnet, gehen wir spazieren, weil wir die frische Luft und die Schönheit der Natur sehr genießen.',\r\n        'ru': 'Мама всегда говорила, что жизнь похожа на коробку шоколадных конфет: никогда не знаешь, какую конфету ты достанешь.'\r\n    }\r\n\r\n    const [sentenceComponents, setSentenceComponents] = useState<React.JSX.Element[]>([]);\r\n    const [activeWordMask, setActiveWordMask] = useState<(0 | 1)[]>([1,0,0,1,0,1,1,1,0,0,0,1,0,1,0,1,1,0,1,0]);\r\n    const [sentenceComplexity, setSentenceComplexity] = useState<-2|-1|0|1|2>(0);\r\n\r\n    const complexityLabels = {\r\n        '-2': [\r\n            'Much Easier',\r\n            'Simple language that should be easy for someone of your level to understand.'\r\n        ],\r\n        '-1': [\r\n            'Easier',\r\n            'Relatively simple for someone of your level.'\r\n        ],\r\n        '0': [\r\n            'Normal',\r\n            'Some challenging vocabulary, mixed with many more common words.'\r\n        ],\r\n        '1': [\r\n            'Harder',\r\n            'More challenging vocabulary that may be difficult to understand at your current level.'\r\n        ],\r\n        '2': [\r\n            'Much Harder',\r\n            'A large variety of challenging vocabulary to really test your limits!'\r\n        ]\r\n    }\r\n\r\n    return (\r\n    <View style={styles.mainContainer}>\r\n        <View style={styles.sliderHeaderContainer}>\r\n            <Text style={styles.sliderHeaderText}>Sentence Complexity</Text>\r\n        </View>\r\n        <Text style={styles.complexityLabelText}>{complexityLabels[sentenceComplexity][0]}</Text>\r\n        <View style={styles.sliderContainer}>\r\n            <Slider\r\n                style={{height: 65, padding: 0, margin: 0, transform: [{ scaleX: 1.6 }, { scaleY: 1.6 }]}}\r\n                minimumValue={-2}\r\n                maximumValue={2}\r\n                value={sentenceComplexity}\r\n                onValueChange={setSentenceComplexity}\r\n                step={1}\r\n                minimumTrackTintColor={constants.GREENREGULAR}\r\n                maximumTrackTintColor={constants.GREY}\r\n                thumbTintColor={constants.GREENREGULAR}\r\n            />\r\n        </View>\r\n        <View style={styles.complexityExplanationContainer}>\r\n            <Text style={styles.complexityExplanationText}>\r\n                {complexityLabels[sentenceComplexity][1]}\r\n            </Text>\r\n        </View>\r\n    </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer: {\r\n        //backgroundColor: constants.GREENREGULAR + '55',\r\n        borderWidth: 3,\r\n        borderColor: constants.GREY,\r\n        padding: 10,\r\n        borderRadius: 20,\r\n        marginBottom: 20\r\n    },\r\n    sliderHeaderContainer: {\r\n        marginVertical: 10,\r\n    },\r\n    sliderHeaderText: {\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        fontSize: constants.H2FONTSIZE,\r\n        color: constants.BLACK,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    },\r\n    sliderContainer: {\r\n        width: '100%',\r\n        paddingHorizontal: '20%',\r\n        marginTop: -20,\r\n        marginBottom: -10,\r\n        flexDirection: 'column',\r\n    },\r\n    complexityLabelText: {\r\n        fontFamily: constants.FONTFAMILYBOLD,\r\n        fontSize: constants.H1FONTSIZE,\r\n        color: constants.GREENREGULAR,\r\n        marginBottom: 10,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    },\r\n    complexityExplanationContainer: {\r\n        marginBottom: 10,\r\n        height: 80\r\n    },\r\n    complexityExplanationText: {\r\n        fontFamily: constants.FONTFAMILY,\r\n        fontSize: constants.H2FONTSIZE,\r\n        color: constants.BLACK,\r\n        textAlign: 'center',\r\n        marginHorizontal: 20\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}